{"id":"1339b4a512a6bd7bf702f189d01b7b0f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/ZKDataMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract DataMarketplace {\n    struct DataListing {\n        address seller;\n        uint256 price;\n        string availTxHash;\n        string availBlockHash;\n        string description;\n        bool active;\n    }\n    \n    // Mapping from listing ID to DataListing\n    mapping(uint256 => DataListing) public listings;\n    // Mapping from address to listing IDs they've purchased\n    mapping(address => uint256[]) public purchases;\n    // Counter for listing IDs\n    uint256 private nextListingId = 1;\n    \n    // Events\n    event DataListed(uint256 indexed listingId, address indexed seller, uint256 price, string description);\n    event DataPurchased(uint256 indexed listingId, address indexed buyer, address indexed seller, uint256 price);\n    event ListingUpdated(uint256 indexed listingId, uint256 newPrice, bool active);\n    \n    // List data for sale\n    function listData(uint256 _price, string memory _availTxHash, string memory _availBlockHash, string memory _description) external returns (uint256) {\n        require(bytes(_availTxHash).length > 0, \"Transaction hash cannot be empty\");\n        require(bytes(_availBlockHash).length > 0, \"Block hash cannot be empty\");\n        \n        uint256 listingId = nextListingId++;\n        \n        listings[listingId] = DataListing({\n            seller: msg.sender,\n            price: _price,\n            availTxHash: _availTxHash,\n            availBlockHash: _availBlockHash,\n            description: _description,\n            active: true\n        });\n        \n        emit DataListed(listingId, msg.sender, _price, _description);\n        return listingId;\n    }\n    \n    // Purchase data\n    function purchaseData(uint256 _listingId) external payable {\n        DataListing storage listing = listings[_listingId];\n        \n        require(listing.seller != address(0), \"Listing does not exist\");\n        require(listing.active, \"Listing is not active\");\n        require(msg.value >= listing.price, \"Insufficient payment\");\n        \n        // Record the purchase\n        purchases[msg.sender].push(_listingId);\n        \n        // Transfer payment to seller\n        (bool success, ) = listing.seller.call{value: listing.price}(\"\");\n        require(success, \"Payment transfer failed\");\n        \n        // Refund excess payment if any\n        if (msg.value > listing.price) {\n            (bool refundSuccess, ) = msg.sender.call{value: msg.value - listing.price}(\"\");\n            require(refundSuccess, \"Refund failed\");\n        }\n        \n        emit DataPurchased(_listingId, msg.sender, listing.seller, listing.price);\n    }\n    \n    // Check if an address has purchased a specific listing\n    function hasPurchased(address _buyer, uint256 _listingId) public view returns (bool) {\n        uint256[] memory userPurchases = purchases[_buyer];\n        for (uint i = 0; i < userPurchases.length; i++) {\n            if (userPurchases[i] == _listingId) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    // Get listing details\n    function getListingDetails(uint256 _listingId) external view returns (\n        address seller,\n        uint256 price,\n        string memory description,\n        bool active\n    ) {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller != address(0), \"Listing does not exist\");\n        \n        return (\n            listing.seller,\n            listing.price,\n            listing.description,\n            listing.active\n        );\n    }\n    \n    // Get data access details (only for buyers)\n    function getDataAccessDetails(uint256 _listingId) external view returns (\n        string memory availTxHash,\n        string memory availBlockHash\n    ) {\n        require(hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender, \"Not authorized\");\n        \n        DataListing storage listing = listings[_listingId];\n        require(listing.seller != address(0), \"Listing does not exist\");\n        \n        return (\n            listing.availTxHash,\n            listing.availBlockHash\n        );\n    }\n    \n    // Update listing price\n    function updateListingPrice(uint256 _listingId, uint256 _newPrice) external {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller == msg.sender, \"Not the seller\");\n        \n        listing.price = _newPrice;\n        emit ListingUpdated(_listingId, _newPrice, listing.active);\n    }\n    \n    // Activate/deactivate listing\n    function setListingStatus(uint256 _listingId, bool _active) external {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller == msg.sender, \"Not the seller\");\n        \n        listing.active = _active;\n        emit ListingUpdated(_listingId, listing.price, _active);\n    }\n    \n    // Get all purchases for a buyer\n    function getPurchases() external view returns (uint256[] memory) {\n        return purchases[msg.sender];\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.13","sources":{"contracts/ZKDataMarketplace.sol":{"id":0,"ast":{"absolutePath":"contracts/ZKDataMarketplace.sol","exportedSymbols":{"DataMarketplace":[442]},"id":443,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"DataMarketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":442,"linearizedBaseContracts":[442],"name":"DataMarketplace","nameLocation":"67:15:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataMarketplace.DataListing","id":14,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"seller","nameLocation":"126:6:0","nodeType":"VariableDeclaration","scope":14,"src":"118:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"price","nameLocation":"150:5:0","nodeType":"VariableDeclaration","scope":14,"src":"142:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"availTxHash","nameLocation":"172:11:0","nodeType":"VariableDeclaration","scope":14,"src":"165:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6,"name":"string","nodeType":"ElementaryTypeName","src":"165:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"availBlockHash","nameLocation":"200:14:0","nodeType":"VariableDeclaration","scope":14,"src":"193:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"description","nameLocation":"231:11:0","nodeType":"VariableDeclaration","scope":14,"src":"224:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":10,"name":"string","nodeType":"ElementaryTypeName","src":"224:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"active","nameLocation":"257:6:0","nodeType":"VariableDeclaration","scope":14,"src":"252:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12,"name":"bool","nodeType":"ElementaryTypeName","src":"252:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DataListing","nameLocation":"96:11:0","nodeType":"StructDefinition","scope":442,"src":"89:181:0","visibility":"public"},{"constant":false,"functionSelector":"de74e57b","id":19,"mutability":"mutable","name":"listings","nameLocation":"365:8:0","nodeType":"VariableDeclaration","scope":442,"src":"326:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing)"},"typeName":{"id":18,"keyType":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"326:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing)"},"valueType":{"id":17,"nodeType":"UserDefinedTypeName","pathNode":{"id":16,"name":"DataListing","nameLocations":["345:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"345:11:0"},"referencedDeclaration":14,"src":"345:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}}},"visibility":"public"},{"constant":false,"functionSelector":"52d3f849","id":24,"mutability":"mutable","name":"purchases","nameLocation":"477:9:0","nodeType":"VariableDeclaration","scope":442,"src":"440:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":23,"keyType":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"440:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":22,"nodeType":"ArrayTypeName","src":"459:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"nextListingId","nameLocation":"539:13:0","nodeType":"VariableDeclaration","scope":442,"src":"523:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"555:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"311d3bd27ae3dbd19bf3422e78b7bb536b01ad6f6ca117e48b49f30991d60931","id":37,"name":"DataListed","nameLocation":"587:10:0","nodeType":"EventDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"614:9:0","nodeType":"VariableDeclaration","scope":37,"src":"598:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"641:6:0","nodeType":"VariableDeclaration","scope":37,"src":"625:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"625:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"657:5:0","nodeType":"VariableDeclaration","scope":37,"src":"649:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"671:11:0","nodeType":"VariableDeclaration","scope":37,"src":"664:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"597:86:0"},"src":"581:103:0"},{"anonymous":false,"eventSelector":"d43f5f34801f2e70be3032e4807e0460394b94b06f8ec19842703ce34dc1874b","id":47,"name":"DataPurchased","nameLocation":"695:13:0","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"725:9:0","nodeType":"VariableDeclaration","scope":47,"src":"709:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"752:5:0","nodeType":"VariableDeclaration","scope":47,"src":"736:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":43,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"775:6:0","nodeType":"VariableDeclaration","scope":47,"src":"759:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"791:5:0","nodeType":"VariableDeclaration","scope":47,"src":"783:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:89:0"},"src":"689:109:0"},{"anonymous":false,"eventSelector":"31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b","id":55,"name":"ListingUpdated","nameLocation":"809:14:0","nodeType":"EventDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"840:9:0","nodeType":"VariableDeclaration","scope":55,"src":"824:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":51,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"859:8:0","nodeType":"VariableDeclaration","scope":55,"src":"851:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"indexed":false,"mutability":"mutable","name":"active","nameLocation":"874:6:0","nodeType":"VariableDeclaration","scope":55,"src":"869:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":52,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"823:58:0"},"src":"803:79:0"},{"body":{"id":119,"nodeType":"Block","src":"1066:605:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":71,"name":"_availTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1090:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":70,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1084:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":69,"name":"bytes","nodeType":"ElementaryTypeName","src":"1084:5:0","typeDescriptions":{}}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1084:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1104:6:0","memberName":"length","nodeType":"MemberAccess","src":"1084:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1084:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e20686173682063616e6e6f7420626520656d707479","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1116:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a09198095e2f4be32405c27fb98b7fefd18bff97a5c3f9d35f5ce692439f86ec","typeString":"literal_string \"Transaction hash cannot be empty\""},"value":"Transaction hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a09198095e2f4be32405c27fb98b7fefd18bff97a5c3f9d35f5ce692439f86ec","typeString":"literal_string \"Transaction hash cannot be empty\""}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1076:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1076:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":78,"nodeType":"ExpressionStatement","src":"1076:75:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":82,"name":"_availBlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1175:15:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":81,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1169:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":80,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:0","typeDescriptions":{}}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1169:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1192:6:0","memberName":"length","nodeType":"MemberAccess","src":"1169:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":85,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1201:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1169:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426c6f636b20686173682063616e6e6f7420626520656d707479","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1204:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_96205ac095239a0032d272635098a1e2b6cf408b401d4dcf3a0740db10b7dab1","typeString":"literal_string \"Block hash cannot be empty\""},"value":"Block hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96205ac095239a0032d272635098a1e2b6cf408b401d4dcf3a0740db10b7dab1","typeString":"literal_string \"Block hash cannot be empty\""}],"id":79,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1161:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"1161:72:0"},{"assignments":[91],"declarations":[{"constant":false,"id":91,"mutability":"mutable","name":"listingId","nameLocation":"1260:9:0","nodeType":"VariableDeclaration","scope":119,"src":"1252:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":94,"initialValue":{"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1272:15:0","subExpression":{"id":92,"name":"nextListingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1272:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1252:35:0"},{"expression":{"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":95,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1306:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":97,"indexExpression":{"id":96,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"1315:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1306:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":99,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1362:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1366:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1362:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":101,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1393:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":102,"name":"_availTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1426:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":103,"name":"_availBlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1468:15:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":104,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1510:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1544:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":98,"name":"DataListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1328:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DataListing_$14_storage_ptr_$","typeString":"type(struct DataMarketplace.DataListing storage pointer)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1354:6:0","1386:5:0","1413:11:0","1452:14:0","1497:11:0","1536:6:0"],"names":["seller","price","availTxHash","availBlockHash","description","active"],"nodeType":"FunctionCall","src":"1328:231:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_memory_ptr","typeString":"struct DataMarketplace.DataListing memory"}},"src":"1306:253:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"id":108,"nodeType":"ExpressionStatement","src":"1306:253:0"},{"eventCall":{"arguments":[{"id":110,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"1594:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1605:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1609:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1605:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":113,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1617:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":114,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1625:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":109,"name":"DataListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1583:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":116,"nodeType":"EmitStatement","src":"1578:60:0"},{"expression":{"id":117,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"1655:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":67,"id":118,"nodeType":"Return","src":"1648:16:0"}]},"functionSelector":"83584530","id":120,"implemented":true,"kind":"function","modifiers":[],"name":"listData","nameLocation":"927:8:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"_price","nameLocation":"944:6:0","nodeType":"VariableDeclaration","scope":120,"src":"936:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"_availTxHash","nameLocation":"966:12:0","nodeType":"VariableDeclaration","scope":120,"src":"952:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"952:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"_availBlockHash","nameLocation":"994:15:0","nodeType":"VariableDeclaration","scope":120,"src":"980:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":60,"name":"string","nodeType":"ElementaryTypeName","src":"980:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"_description","nameLocation":"1025:12:0","nodeType":"VariableDeclaration","scope":120,"src":"1011:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62,"name":"string","nodeType":"ElementaryTypeName","src":"1011:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"935:103:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":120,"src":"1057:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1056:9:0"},"scope":442,"src":"918:753:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":218,"nodeType":"Block","src":"1761:875:0","statements":[{"assignments":[127],"declarations":[{"constant":false,"id":127,"mutability":"mutable","name":"listing","nameLocation":"1791:7:0","nodeType":"VariableDeclaration","scope":218,"src":"1771:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":126,"nodeType":"UserDefinedTypeName","pathNode":{"id":125,"name":"DataListing","nameLocations":["1771:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1771:11:0"},"referencedDeclaration":14,"src":"1771:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":131,"initialValue":{"baseExpression":{"id":128,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1801:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":130,"indexExpression":{"id":129,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"1810:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1771:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":133,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1848:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1856:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1848:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1866:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:0","typeDescriptions":{}}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1848:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1878:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1840:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"1840:63:0"},{"expression":{"arguments":[{"expression":{"id":144,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1921:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1929:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":13,"src":"1921:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e67206973206e6f7420616374697665","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1937:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""},"value":"Listing is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""}],"id":143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"ExpressionStatement","src":"1913:48:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1979:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1983:5:0","memberName":"value","nodeType":"MemberAccess","src":"1979:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":152,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1992:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2000:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"1992:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1979:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2007:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1971:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"1971:59:0"},{"expression":{"arguments":[{"id":163,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2107:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":158,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2080:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":161,"indexExpression":{"expression":{"id":159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2090:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2094:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2090:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2080:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:4:0","memberName":"push","nodeType":"MemberAccess","src":"2080:26:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2080:38:0"},{"assignments":[167,null],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"success","nameLocation":"2181:7:0","nodeType":"VariableDeclaration","scope":218,"src":"2176:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"2176:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":176,"initialValue":{"arguments":[{"hexValue":"","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2236:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":168,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2194:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2202:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"2194:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2209:4:0","memberName":"call","nodeType":"MemberAccess","src":"2194:19:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":171,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2221:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2229:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2221:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2194:41:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2175:64:0"},{"expression":{"arguments":[{"id":178,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2257:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2266:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2249:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"ExpressionStatement","src":"2249:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2355:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2359:5:0","memberName":"value","nodeType":"MemberAccess","src":"2355:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":184,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2367:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2367:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2355:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"IfStatement","src":"2351:187:0","trueBody":{"id":206,"nodeType":"Block","src":"2382:156:0","statements":[{"assignments":[188,null],"declarations":[{"constant":false,"id":188,"mutability":"mutable","name":"refundSuccess","nameLocation":"2402:13:0","nodeType":"VariableDeclaration","scope":206,"src":"2397:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":187,"name":"bool","nodeType":"ElementaryTypeName","src":"2397:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":200,"initialValue":{"arguments":[{"hexValue":"","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2471:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2421:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2425:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2421:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2432:4:0","memberName":"call","nodeType":"MemberAccess","src":"2421:15:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2448:5:0","memberName":"value","nodeType":"MemberAccess","src":"2444:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":194,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2456:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2464:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2456:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2444:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2421:49:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2396:78:0"},{"expression":{"arguments":[{"id":202,"name":"refundSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2496:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2511:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2488:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"2488:39:0"}]}},{"eventCall":{"arguments":[{"id":209,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2575:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":210,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2587:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2591:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2587:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":212,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2599:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2607:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"2599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":214,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2615:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2623:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2615:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":208,"name":"DataPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2561:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2561:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2556:73:0"}]},"functionSelector":"84c4f594","id":219,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseData","nameLocation":"1711:12:0","nodeType":"FunctionDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"_listingId","nameLocation":"1732:10:0","nodeType":"VariableDeclaration","scope":219,"src":"1724:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1723:20:0"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1761:0:0"},"scope":442,"src":"1702:934:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":261,"nodeType":"Block","src":"2791:250:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"userPurchases","nameLocation":"2818:13:0","nodeType":"VariableDeclaration","scope":261,"src":"2801:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":231,"nodeType":"ArrayTypeName","src":"2801:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":236,"initialValue":{"baseExpression":{"id":233,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2834:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"_buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2834:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2801:50:0"},{"body":{"id":257,"nodeType":"Block","src":"2909:104:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":248,"name":"userPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2927:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":250,"indexExpression":{"id":249,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2941:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2927:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":251,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2947:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2927:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":256,"nodeType":"IfStatement","src":"2923:80:0","trueBody":{"id":255,"nodeType":"Block","src":"2959:44:0","statements":[{"expression":{"hexValue":"74727565","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2984:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":254,"nodeType":"Return","src":"2977:11:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2878:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":242,"name":"userPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2882:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2896:6:0","memberName":"length","nodeType":"MemberAccess","src":"2882:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2878:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"initializationExpression":{"assignments":[238],"declarations":[{"constant":false,"id":238,"mutability":"mutable","name":"i","nameLocation":"2871:1:0","nodeType":"VariableDeclaration","scope":258,"src":"2866:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint","nodeType":"ElementaryTypeName","src":"2866:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":240,"initialValue":{"hexValue":"30","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2875:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2866:10:0"},"loopExpression":{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2904:3:0","subExpression":{"id":245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2904:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":247,"nodeType":"ExpressionStatement","src":"2904:3:0"},"nodeType":"ForStatement","src":"2861:152:0"},{"expression":{"hexValue":"66616c7365","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3029:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":260,"nodeType":"Return","src":"3022:12:0"}]},"functionSelector":"11923132","id":262,"implemented":true,"kind":"function","modifiers":[],"name":"hasPurchased","nameLocation":"2715:12:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_buyer","nameLocation":"2736:6:0","nodeType":"VariableDeclaration","scope":262,"src":"2728:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"2728:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"_listingId","nameLocation":"2752:10:0","nodeType":"VariableDeclaration","scope":262,"src":"2744:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2744:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2727:36:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"2785:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"2785:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2784:6:0"},"scope":442,"src":"2706:335:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":303,"nodeType":"Block","src":"3257:292:0","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"listing","nameLocation":"3287:7:0","nodeType":"VariableDeclaration","scope":303,"src":"3267:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"DataListing","nameLocations":["3267:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3267:11:0"},"referencedDeclaration":14,"src":"3267:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":281,"initialValue":{"baseExpression":{"id":278,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3297:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":280,"indexExpression":{"id":279,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3306:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3297:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3267:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":283,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3335:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3343:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3335:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:0","typeDescriptions":{}}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3335:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3365:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3327:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"3327:63:0"},{"expression":{"components":[{"expression":{"id":293,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3430:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3438:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3430:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":295,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3458:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3466:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3458:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":297,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3485:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3493:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":11,"src":"3485:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":299,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3518:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3526:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3518:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3416:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_string_storage_$_t_bool_$","typeString":"tuple(address,uint256,string storage ref,bool)"}},"functionReturnParameters":274,"id":302,"nodeType":"Return","src":"3409:133:0"}]},"functionSelector":"fb05da2e","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"getListingDetails","nameLocation":"3087:17:0","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"_listingId","nameLocation":"3113:10:0","nodeType":"VariableDeclaration","scope":304,"src":"3105:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"3105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3104:20:0"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"seller","nameLocation":"3165:6:0","nodeType":"VariableDeclaration","scope":304,"src":"3157:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"price","nameLocation":"3189:5:0","nodeType":"VariableDeclaration","scope":304,"src":"3181:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"description","nameLocation":"3218:11:0","nodeType":"VariableDeclaration","scope":304,"src":"3204:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":270,"name":"string","nodeType":"ElementaryTypeName","src":"3204:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"active","nameLocation":"3244:6:0","nodeType":"VariableDeclaration","scope":304,"src":"3239:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":272,"name":"bool","nodeType":"ElementaryTypeName","src":"3239:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3147:109:0"},"scope":442,"src":"3078:471:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":354,"nodeType":"Block","src":"3760:372:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3791:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3795:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3791:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":317,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3803:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":314,"name":"hasPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3778:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3778:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":319,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3818:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":321,"indexExpression":{"id":320,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3827:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3818:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"id":322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3839:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3818:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3849:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3853:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3849:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3818:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3778:81:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3861:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3770:108:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"3770:108:0"},{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"listing","nameLocation":"3917:7:0","nodeType":"VariableDeclaration","scope":354,"src":"3897:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":331,"nodeType":"UserDefinedTypeName","pathNode":{"id":330,"name":"DataListing","nameLocations":["3897:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3897:11:0"},"referencedDeclaration":14,"src":"3897:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":336,"initialValue":{"baseExpression":{"id":333,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3927:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":335,"indexExpression":{"id":334,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3936:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3927:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3897:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":338,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3965:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3973:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3965:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3991:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3983:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"3983:7:0","typeDescriptions":{}}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3965:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3995:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3957:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"3957:63:0"},{"expression":{"components":[{"expression":{"id":348,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4060:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4068:11:0","memberName":"availTxHash","nodeType":"MemberAccess","referencedDeclaration":7,"src":"4060:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":350,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4093:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4101:14:0","memberName":"availBlockHash","nodeType":"MemberAccess","referencedDeclaration":9,"src":"4093:22:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4046:79:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_string_storage_$","typeString":"tuple(string storage ref,string storage ref)"}},"functionReturnParameters":312,"id":353,"nodeType":"Return","src":"4039:86:0"}]},"functionSelector":"0c690e57","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"getDataAccessDetails","nameLocation":"3617:20:0","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"_listingId","nameLocation":"3646:10:0","nodeType":"VariableDeclaration","scope":355,"src":"3638:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3637:20:0"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"availTxHash","nameLocation":"3704:11:0","nodeType":"VariableDeclaration","scope":355,"src":"3690:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":308,"name":"string","nodeType":"ElementaryTypeName","src":"3690:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"availBlockHash","nameLocation":"3739:14:0","nodeType":"VariableDeclaration","scope":355,"src":"3725:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":310,"name":"string","nodeType":"ElementaryTypeName","src":"3725:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3680:79:0"},"scope":442,"src":"3608:524:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":391,"nodeType":"Block","src":"4246:244:0","statements":[{"assignments":[364],"declarations":[{"constant":false,"id":364,"mutability":"mutable","name":"listing","nameLocation":"4276:7:0","nodeType":"VariableDeclaration","scope":391,"src":"4256:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":363,"nodeType":"UserDefinedTypeName","pathNode":{"id":362,"name":"DataListing","nameLocations":["4256:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"4256:11:0"},"referencedDeclaration":14,"src":"4256:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":368,"initialValue":{"baseExpression":{"id":365,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"4286:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":367,"indexExpression":{"id":366,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4295:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4286:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4256:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":370,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4324:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4332:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"4324:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4342:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4342:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4324:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652073656c6c6572","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4354:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""},"value":"Not the seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""}],"id":369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4316:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4316:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4316:55:0"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":378,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4390:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4398:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4390:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":381,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4406:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4390:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":383,"nodeType":"ExpressionStatement","src":"4390:25:0"},{"eventCall":{"arguments":[{"id":385,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4445:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":386,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4457:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":387,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4468:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4476:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":13,"src":"4468:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":384,"name":"ListingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"4430:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4430:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"EmitStatement","src":"4425:58:0"}]},"functionSelector":"c4604943","id":392,"implemented":true,"kind":"function","modifiers":[],"name":"updateListingPrice","nameLocation":"4179:18:0","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"_listingId","nameLocation":"4206:10:0","nodeType":"VariableDeclaration","scope":392,"src":"4198:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"_newPrice","nameLocation":"4226:9:0","nodeType":"VariableDeclaration","scope":392,"src":"4218:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4218:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4197:39:0"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"4246:0:0"},"scope":442,"src":"4170:320:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":428,"nodeType":"Block","src":"4604:240:0","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"listing","nameLocation":"4634:7:0","nodeType":"VariableDeclaration","scope":428,"src":"4614:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":400,"nodeType":"UserDefinedTypeName","pathNode":{"id":399,"name":"DataListing","nameLocations":["4614:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"4614:11:0"},"referencedDeclaration":14,"src":"4614:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":405,"initialValue":{"baseExpression":{"id":402,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"4644:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$14_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":404,"indexExpression":{"id":403,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4653:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4644:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4614:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":407,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4682:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4690:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3,"src":"4682:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4700:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4704:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4700:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4682:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652073656c6c6572","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4712:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""},"value":"Not the seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""}],"id":406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4674:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4674:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"4674:55:0"},{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":415,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4748:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4756:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":13,"src":"4748:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4748:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":420,"nodeType":"ExpressionStatement","src":"4748:24:0"},{"eventCall":{"arguments":[{"id":422,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4802:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":423,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4814:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$14_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4822:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4814:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":425,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4829:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":421,"name":"ListingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"4787:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4787:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"EmitStatement","src":"4782:55:0"}]},"functionSelector":"1e9644bc","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"setListingStatus","nameLocation":"4544:16:0","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"_listingId","nameLocation":"4569:10:0","nodeType":"VariableDeclaration","scope":429,"src":"4561:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"_active","nameLocation":"4586:7:0","nodeType":"VariableDeclaration","scope":429,"src":"4581:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"4581:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4560:34:0"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"4604:0:0"},"scope":442,"src":"4535:309:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":440,"nodeType":"Block","src":"4956:45:0","statements":[{"expression":{"baseExpression":{"id":435,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4973:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":438,"indexExpression":{"expression":{"id":436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4983:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4987:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4983:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4973:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":434,"id":439,"nodeType":"Return","src":"4966:28:0"}]},"functionSelector":"c47f0f90","id":441,"implemented":true,"kind":"function","modifiers":[],"name":"getPurchases","nameLocation":"4900:12:0","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"4912:2:0"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"4938:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"4938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":432,"nodeType":"ArrayTypeName","src":"4938:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4937:18:0"},"scope":442,"src":"4891:110:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":443,"src":"58:4945:0","usedErrors":[]}],"src":"32:4971:0"}}},"contracts":{"contracts/ZKDataMarketplace.sol":{"DataMarketplace":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"DataListed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"DataPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"ListingUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"getDataAccessDetails","outputs":[{"internalType":"string","name":"availTxHash","type":"string"},{"internalType":"string","name":"availBlockHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"getListingDetails","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPurchases","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_buyer","type":"address"},{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"hasPurchased","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"string","name":"_availTxHash","type":"string"},{"internalType":"string","name":"_availBlockHash","type":"string"},{"internalType":"string","name":"_description","type":"string"}],"name":"listData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"listings","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"availTxHash","type":"string"},{"internalType":"string","name":"availBlockHash","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"purchaseData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"purchases","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"},{"internalType":"bool","name":"_active","type":"bool"}],"name":"setListingStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"},{"internalType":"uint256","name":"_newPrice","type":"uint256"}],"name":"updateListingPrice","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"DataListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"DataPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ListingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"getDataAccessDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"availBlockHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"getListingDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPurchases\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"hasPurchased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_availBlockHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"listData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"availBlockHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"purchaseData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setListingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKDataMarketplace.sol\":\"DataMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ZKDataMarketplace.sol\":{\"keccak256\":\"0x1560a756c71617dfc54d25b1fa381ced3c4b2269c059ee6ca2836cc353402a13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f496d7486e19cb0b7b85b7152b6754dad10d8279406f385b568ca1070e7f8a2c\",\"dweb:/ipfs/QmW6UKeUUYwD3vUnKx8HHHHKePxDkQc3KCHe6Y4DEGaJvw\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ZKDataMarketplace.sol:DataMarketplace\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[15]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s!\t4, r3, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.le\t@.BB0_7\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_38\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_46\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t128, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_19[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tadd\t@CPI0_15[0], r0, r4\n\tsub!\tr2, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_15[0], r3, r7\n\tand\t@CPI0_15[0], r2, r2\n\tsub!\tr2, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_27\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_19[0], r4, r7\n\tjump.gt\t@.BB0_27\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r4\n\tst.1.inc\tr1, r2, r4\n\tadd\t36, r5, r5\n\tadd\tr2, r5, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB0_2\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_224\n\tadd\tr0, r0, r7\n.BB0_62:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_62\n.BB0_224:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_64\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB0_64:\n\tadd\tr4, r2, r2\n\tst.1\tr2, r0\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI0_19[0], r5, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r3\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI0_15[0], r0, r4\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr4, r0, r7\n\tand\t@CPI0_15[0], r3, r3\n\tand\t@CPI0_15[0], r6, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI0_15[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.gt\t@.BB0_27\n\tadd\t63, r3, r2\n\tand\tr2, r10, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_19[0], r4, r8\n\tjump.gt\t@.BB0_27\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r4\n\tst.1.inc\tr2, r3, r4\n\tadd\t36, r5, r7\n\tadd\tr3, r7, r5\n\tsub!\tr5, r6, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr10, r0, stack-[14]\n\tand\t31, r3, r5\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_223\n\tadd\tr0, r0, r8\n.BB0_72:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_72\n.BB0_223:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_74\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_74:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t100, r3, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_19[0], r5, r4\n\tadd\tstack-[14], r0, r11\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r4\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI0_15[0], r0, r7\n\tsub!\tr4, r6, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_15[0], r4, r4\n\tand\t@CPI0_15[0], r6, r9\n\tsub!\tr4, r9, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr4, r9, r4\n\tsub.s!\t@CPI0_15[0], r4, r4\n\tadd\tr8, r0, r4\n\tadd.eq\tr7, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_19[0], r3, r4\n\tjump.gt\t@.BB0_27\n\tadd\t63, r3, r4\n\tand\tr4, r11, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tadd\tr7, r0, stack-[13]\n\tsub!\tr4, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_19[0], r4, r8\n\tjump.gt\t@.BB0_27\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r4\n\tadd\tstack-[13], r0, r4\n\tst.1.inc\tr4, r3, r4\n\tadd\t36, r5, r7\n\tadd\tr3, r7, r5\n\tsub!\tr5, r6, r5\n\tjump.gt\t@.BB0_2\n\tand\t31, r3, r5\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_222\n\tadd\tr0, r0, r8\n.BB0_82:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_82\n.BB0_222:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_84\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_84:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_86\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_37[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\t2, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.le\t@.BB0_13\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.eq\t@.BB0_203\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.eq\t@.BB0_216\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r1\n\tadd\tr5, r0, stack-[15]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r2\n\tand!\t@CPI0_16[0], r2, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_bfa5, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tadd\t5, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t32, r4, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr4, r2\n\tadd\t128, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tstack-[11], r0, r4\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_18\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_hasPurchased, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsub.s!\t@CPI0_7[0], r1, r4\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_16[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_43\n\tadd\t1, r1, r2\n\tadd\tstack-[14], r0, r4\n\tsstore\tr2, r4\n\tadd\t5, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_45\n\tjump\t@.BB0_2\n.BB0_18:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[14]\n\tand\t@CPI0_16[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr3, r0, stack-[12]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tr5, r0, r2\n\tjump.eq\t@.BB0_25\n\tld\tr1, r1\n\tadd\tr5, r0, r2\n\tadd\tr0, r0, r3\n.BB0_24:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_24\n.BB0_25:\n\tadd\tstack-[13], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r1\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[15], r0, r4\n\tjump.eq\t@.BB0_32\n\tadd\tr0, r0, r2\n.BB0_31:\n\tshl.s\t5, r2, r3\n\tadd\tr3, r5, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB0_35\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_31\n.BB0_32:\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_16[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[15], r0, r4\n\tjump.ne\t@.BB0_34\n.BB0_35:\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r2\n\tand!\t@CPI0_16[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_bfa5, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tadd\t2, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\t3, r2, r2\n\tadd\tr1, r0, stack-[13]\n\tadd\tr2, r0, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\tstack-[14], r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[14]\n\tadd\t64, r3, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r1\n\tsub\tr2, r1, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_152:\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_15[0], r0, r3\n\tsub.s!\t32, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tsload\tr3, r1\n\tand!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_156\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_31[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r5\n\tsub!\tr5, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[15]\n\tadd\tr5, r0, stack-[14]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[15], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_16[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_43\n\tadd\t5, r1, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tor\tr3, r6, r3\n\tsstore\tr2, r3\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r6\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_20[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_45:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_203:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr3, r0, stack-[14]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[13], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB0_210\n\tld\tr1, r1\n\tadd\tr0, r0, r3\n\tadd\tr6, r0, r2\n.BB0_209:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_209\n.BB0_210:\n\tadd\tstack-[15], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_27\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr4, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_215\n\tadd\tr0, r0, r4\n.BB0_214:\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_214\n.BB0_215:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_uint256_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_216:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_15[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_218\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_218:\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t2, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[15], r0, r1\n\tadd\t3, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[15], r0, r1\n\tadd\t4, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\t5, r2, r2\n\tadd\tr1, r0, stack-[13]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t32, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t192, r0, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tand\t@CPI0_16[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t192, r3, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r3\n\tsub\tr2, r3, r1\n\tadd\t96, r3, r3\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\t128, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tstack-[15], r0, r4\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_156:\n\tadd\t5, r3, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_158\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t21, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_158:\n\tadd\t1, r3, r4\n\tsload\tr4, r1\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_160\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_160:\n\tadd\tr4, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.le\t@.BB0_162\n.BB0_27:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_162:\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[10]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_163\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_16[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB0_166\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_168\n.BB0_34:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_163:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_166:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_178\n\tadd\tr4, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tjump\t@.BB0_168\n.BB0_178:\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_168:\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_169\n.BB0_176:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_179\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_182\n\tcontext.get_context_u128\tr4\n\tsub\tr4, r2, r3\n\tcontext.get_context_u128\tr1\n\tsub!\tr3, r1, r1\n\tjump.le\t@.BB0_183\n.BB0_89:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_169:\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_27\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_19[0], r4, r6\n\tjump.gt\t@.BB0_27\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r6\n.BB0_174:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_174\n.BB0_226:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_176\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr1, r5, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n\tjump\t@.BB0_176\n.BB0_179:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_183:\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB0_184\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_186\n.BB0_184:\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB0_196\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n\tjump\t@.BB0_186\n.BB0_196:\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[12], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_186:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_187\n.BB0_194:\n\tadd\tstack-[11], r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_197\n.BB0_182:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tand\t@CPI0_16[0], r2, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_28[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tadd\tstack-[12], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_45\n\tjump\t@.BB0_2\n.BB0_187:\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_27\n\tadd\t63, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tld.1\t64, r2\n\tadd\tr2, r3, r3\n\tsub!\tr3, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_19[0], r3, r5\n\tjump.gt\t@.BB0_27\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_27\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tptr.add\tstack[@ptr_return_data], r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r5\n.BB0_192:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_192\n.BB0_225:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_194\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_194\n.BB0_197:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t13, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tld.1\tr2, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_88\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_88:\n\tadd\t2, r0, r3\n\tsload\tr3, r4\n\tsub.s\t1, r0, r5\n\tadd\tr4, r0, stack-[12]\n\tadd\tr5, r0, stack-[11]\n\tsub!\tr4, r5, r4\n\tjump.eq\t@.BB0_89\n\tadd\tstack-[12], r0, r4\n\tadd\t1, r4, r4\n\tsstore\tr3, r4\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tsub.s!\t@CPI0_32[0], r3, r3\n\tjump.gt\t@.BB0_27\n\tadd\tstack-[15], r0, r6\n\tadd\t192, r6, r3\n\tst.1\t64, r3\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[6]\n\tst.1.inc\tr6, r3, r7\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t160, r6, r5\n\tadd\t1, r0, r4\n\tadd\tr5, r0, stack-[4]\n\tst.1\tr5, r4\n\tadd\t128, r6, r5\n\tadd\tstack-[13], r0, r4\n\tadd\tr5, r0, stack-[7]\n\tst.1\tr5, r4\n\tadd\t96, r6, r4\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t64, r6, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[10]\n\tst.1\tr7, r3\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_16[0], r2, r2\n\tld\tr1, r3\n\tsload\tr3, r1\n\tand\t@CPI0_33[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr3, r0, stack-[10]\n\tadd\t1, r3, r2\n\tsstore\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_27\n\tadd\tstack-[10], r0, r1\n\tadd\t2, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_95\n.BB0_94:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_99\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_99\n.BB0_100:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_100\n.BB0_99:\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_109\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[14], r0, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_106\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_105:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_105\n.BB0_106:\n\tadd\tstack-[15], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_108\n\tadd\tstack-[15], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[9], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_108:\n\tadd\tstack-[15], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_101\n.BB0_109:\n\tadd\tstack-[15], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_111\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_111:\n\tadd\tstack-[15], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_101:\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_27\n\tadd\tstack-[10], r0, r1\n\tadd\t3, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_94\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_117\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_117\n.BB0_118:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_118\n.BB0_117:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_127\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[14], r0, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_124\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_123:\n\tadd\tstack-[15], r0, r5\n\tadd\tr2, r5, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_123\n.BB0_124:\n\tadd\tstack-[9], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_126\n\tadd\tstack-[9], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[15], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_126:\n\tadd\tstack-[9], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_119\n.BB0_127:\n\tadd\tstack-[9], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_129\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_129:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_119:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_27\n\tadd\tstack-[10], r0, r1\n\tadd\t4, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_94\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_135\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_135\n.BB0_136:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_136\n.BB0_135:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_148\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[14], r0, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_145\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_144:\n\tadd\tstack-[15], r0, r5\n\tadd\tr2, r5, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_144\n.BB0_145:\n\tadd\tstack-[9], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_147\n\tadd\tstack-[9], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[15], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_147:\n\tadd\tstack-[9], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_137\n.BB0_148:\n\tadd\tstack-[9], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_150\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_150:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_137:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tadd\t5, r1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\t64, r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_140\n\tadd\tr0, r0, r4\n.BB0_139:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tstack-[13], r0, r6\n\tadd\tr4, r6, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_139\n.BB0_140:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t127, r2, r2\n\tadd\tstack-[14], r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nstorage_array_index_access_uint256_dyn:\n.func_begin4:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB4_1\n\tst.1\t0, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tr0, r0, r2\n\tret\n.BB4_1:\n\tadd\t@CPI4_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin5:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd\tr4, r0, r6\n\tadd.eq\tr5, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB5_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB5_7\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_9\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB5_3\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB5_12:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB5_12\n\tjump\t@.BB5_3\n.BB5_7:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB5_3:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tjump.gt\t@.BB5_5\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_5\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\tadd\t@CPI5_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nrequire_helper_stringliteral_bfa5:\n.func_begin6:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tret\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_2[0], r0, r2\n\tsub.s!\t@CPI6_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_hasPurchased:\n.func_begin7:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[4]\n\tand\t@CPI7_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[2], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[1], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB7_7\n\tld\tr1, r1\n\tadd\tr6, r0, r2\n\tadd\tr0, r0, r3\n.BB7_6:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB7_6\n.BB7_7:\n\tadd\tstack-[3], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI7_4[0], r1, r3\n\tadd\tstack-[5], r0, r5\n\tjump.gt\t@.BB7_9\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_9\n\tst.1\t64, r1\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[4], r0, r4\n\tjump.eq\t@.BB7_5\n\tadd\tr0, r0, r3\n.BB7_13:\n\tshl.s\t5, r3, r1\n\tadd\tr6, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r4, r1\n\tadd\tr5, r0, r1\n\tjump.eq\t@.BB7_5\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB7_13\n.BB7_5:\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_9:\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI4_2:\nCPI5_0:\nCPI6_2:\nCPI7_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2227500435\nCPI0_3:\n\t.cell 3296661391\nCPI0_4:\n\t.cell 3296661392\nCPI0_5:\n\t.cell 3732202875\nCPI0_6:\n\t.cell 4211464750\nCPI0_7:\n\t.cell 2227500436\nCPI0_8:\n\t.cell 3294644547\nCPI0_9:\n\t.cell 513164475\nCPI0_10:\n\t.cell 513164476\nCPI0_11:\n\t.cell 1389623369\nCPI0_12:\n\t.cell 2203600176\nCPI0_13:\n\t.cell 208211543\nCPI0_14:\n\t.cell 294793522\nCPI0_15:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_16:\nCPI3_1:\nCPI7_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_17:\nCPI7_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_18:\nCPI4_3:\nCPI5_1:\nCPI7_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_19:\nCPI5_2:\nCPI7_4:\n\t.cell 18446744073709551615\nCPI0_20:\n\t.cell 22468851670027339447189299131461116481346848353120295772503910100714774041867\nCPI0_21:\nCPI4_0:\nCPI5_3:\nCPI7_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_22:\nCPI4_1:\nCPI5_4:\nCPI7_6:\n\t.cell 2852213850513516153367582212096\nCPI0_23:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_24:\n\t.cell 36357250112568942169859795702854159002761248710023218911222728242079748587520\nCPI0_25:\nCPI6_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_26:\nCPI6_3:\n\t.cell 7922816251426433759354395033600\nCPI0_27:\n\t.cell 37268812281437135120176313126454835497159806492523464732883036169862142492672\nCPI0_28:\n\t.cell -19789796891269710459526047188276808382065027284356818605162691360617517709493\nCPI0_29:\n\t.cell 33213987989631693067883787898815127616812546025719499875365775571681246445568\nCPI0_30:\n\t.cell 34562092273416877893884925022520508526556811457035280910031927667904514883584\nCPI0_31:\nCPI6_0:\n\t.cell 34562092273416877893761968078187313758277759066458009752210911109994692739072\nCPI0_32:\n\t.cell 18446744073709551423\nCPI0_33:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_34:\n\t.cell 22214981023023722123110414121058895291194817539435641972154754784429312706865\nCPI0_35:\n\t.cell 2535301200456458802993406410752\nCPI0_36:\n\t.cell 30044236263652607918987560659154125674135254773192388756801978542287088517120\nCPI0_37:\n\t.cell 38196372293519861353184048017145309648891829512883277828088128122664355132537\nCPI0_38:\n\t.cell 35477323691238871464405063322201249921994547852611863304282610224653194493952\nCPI0_39:\n\t.cell 35477323689243310368438923863311949061285246809004664645976862012762985857024\n","bytecode":{"object":""},"methodIdentifiers":{"getDataAccessDetails(uint256)":"0c690e57","getListingDetails(uint256)":"fb05da2e","getPurchases()":"c47f0f90","hasPurchased(address,uint256)":"11923132","listData(uint256,string,string,string)":"83584530","listings(uint256)":"de74e57b","purchaseData(uint256)":"84c4f594","purchases(address,uint256)":"52d3f849","setListingStatus(uint256,bool)":"1e9644bc","updateListingPrice(uint256,uint256)":"c4604943"}},"irOptimized":"/// @use-src 0:\"contracts/ZKDataMarketplace.sol\"\nobject \"DataMarketplace_442\" {\n    code {\n        {\n            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:555:556  \"1\" */ 0x02, 0x01)\n            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n            let _2 := datasize(\"DataMarketplace_442_deployed\")\n            codecopy(_1, dataoffset(\"DataMarketplace_442_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/ZKDataMarketplace.sol\"\n    object \"DataMarketplace_442_deployed\" {\n        code {\n            {\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0c690e57 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 0:3778:3859  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                        let expr := /** @src 0:3778:3814  \"hasPurchased(msg.sender, _listingId)\" */ fun_hasPurchased(/** @src 0:3791:3801  \"msg.sender\" */ caller(), /** @src 0:3778:3814  \"hasPurchased(msg.sender, _listingId)\" */ value)\n                        /// @src 0:3778:3859  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                        if iszero(expr)\n                        {\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            mstore(0, value)\n                            mstore(32, 0)\n                            /// @src 0:3778:3859  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                            expr := /** @src 0:3818:3859  \"listings[_listingId].seller == msg.sender\" */ eq(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)), /** @src 0:3791:3801  \"msg.sender\" */ caller())\n                        }\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 14)\n                            mstore(add(memPtr, 68), \"Not authorized\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, value)\n                        mstore(32, 0)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:3957:4020  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:3965:3993  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ and(sload(/** @src 0:3965:3979  \"listing.seller\" */ dataSlot), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1)))))\n                        /// @src 0:4039:4125  \"return (...\"\n                        let var_availTxHash_mpos := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:4060:4079  \"listing.availTxHash\" */ add(dataSlot, 2))\n                        /// @src 0:4039:4125  \"return (...\"\n                        let var_availBlockHash_mpos := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:4093:4115  \"listing.availBlockHash\" */ add(dataSlot, 3))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 64)\n                        let tail := abi_encode_string(var_availTxHash_mpos, add(memPos, 64))\n                        mstore(add(memPos, 32), sub(tail, memPos))\n                        return(memPos, sub(abi_encode_string(var_availBlockHash_mpos, tail), memPos))\n                    }\n                    case 0x11923132 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_hasPurchased(param, param_1)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(ret)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x1e9644bc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value_2 := calldataload(36)\n                        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n                        mstore(0, value_1)\n                        mstore(32, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let cleaned := and(sload(/** @src 0:4682:4696  \"listing.seller\" */ dataSlot_1), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4674:4729  \"require(listing.seller == msg.sender, \\\"Not the seller\\\")\"\n                        require_helper_stringliteral_ce57(/** @src 0:4682:4710  \"listing.seller == msg.sender\" */ eq(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ cleaned, /** @src 0:4700:4710  \"msg.sender\" */ caller()))\n                        /// @src 0:4748:4772  \"listing.active = _active\"\n                        update_storage_value_offsett_bool_to_bool(/** @src 0:4748:4762  \"listing.active\" */ add(dataSlot_1, 5), /** @src 0:4748:4772  \"listing.active = _active\" */ value_2)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let _1 := sload(/** @src 0:4814:4827  \"listing.price\" */ add(dataSlot_1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1))\n                        /// @src 0:4787:4837  \"ListingUpdated(_listingId, listing.price, _active)\"\n                        let _2 := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(64)\n                        /// @src 0:4787:4837  \"ListingUpdated(_listingId, listing.price, _active)\"\n                        log2(_2, sub(abi_encode_uint256_bool(_2, _1, value_2), _2), 0x31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b, value_1)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0x52d3f849 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_addresst_uint256(calldatasize())\n                        mstore(0, and(param_2, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:440:486  \"mapping(address => uint256[]) public purchases\" */ 1)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:440:486  \"mapping(address => uint256[]) public purchases\"\n                        if iszero(lt(param_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sload(/** @src 0:440:486  \"mapping(address => uint256[]) public purchases\" */ dataSlot_2)))\n                        {\n                            revert(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0, 0)\n                        }\n                        /// @src 0:440:486  \"mapping(address => uint256[]) public purchases\"\n                        let slot, offset := storage_array_index_access_uint256_dyn(dataSlot_2, param_3)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let _3 := sload(/** @src 0:440:486  \"mapping(address => uint256[]) public purchases\" */ slot)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, shr(shl(3, offset), _3))\n                        return(memPos_2, 0x20)\n                    }\n                    case 0x83584530 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1 := abi_decode_string(add(4, offset_1), calldatasize())\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2 := abi_decode_string(add(4, offset_2), calldatasize())\n                        let offset_3 := calldataload(100)\n                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                        let value3 := abi_decode_string(add(4, offset_3), calldatasize())\n                        if /** @src 0:1084:1114  \"bytes(_availTxHash).length > 0\" */ iszero(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(/** @src 0:1084:1103  \"bytes(_availTxHash)\" */ value1))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 32)\n                            mstore(add(memPtr_1, 68), \"Transaction hash cannot be empty\")\n                            revert(memPtr_1, 100)\n                        }\n                        if /** @src 0:1169:1202  \"bytes(_availBlockHash).length > 0\" */ iszero(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(/** @src 0:1169:1191  \"bytes(_availBlockHash)\" */ value2))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 26)\n                            mstore(add(memPtr_2, 68), \"Block hash cannot be empty\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _4 := sload(/** @src 0:1272:1287  \"nextListingId++\" */ 0x02)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        sstore(/** @src 0:1272:1287  \"nextListingId++\" */ 0x02, increment_uint256(_4))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let memPtr_3 := mload(64)\n                        let newFreePtr := add(memPtr_3, 192)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_3, /** @src 0:1362:1372  \"msg.sender\" */ caller())\n                        /// @src 0:1328:1559  \"DataListing({...\"\n                        let _5 := add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 32)\n                        mstore(_5, calldataload(4))\n                        /// @src 0:1328:1559  \"DataListing({...\"\n                        let _6 := add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 64)\n                        mstore(_6, value1)\n                        mstore(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 96), value2)\n                        mstore(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 128), value3)\n                        mstore(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, 160), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1)\n                        mstore(0, _4)\n                        mstore(32, 0)\n                        let dataSlot_3 := keccak256(0, 64)\n                        sstore(dataSlot_3, or(and(sload(dataSlot_3), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_3), sub(shl(160, 1), 1))))\n                        sstore(add(dataSlot_3, 1), mload(_5))\n                        let _7 := mload(_6)\n                        let newLen := mload(_7)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _8 := extract_byte_array_length(sload(add(dataSlot_3, /** @src 0:1272:1287  \"nextListingId++\" */ 0x02)))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        if gt(_8, 31)\n                        {\n                            mstore(0, add(dataSlot_3, /** @src 0:1272:1287  \"nextListingId++\" */ 0x02))\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            let data := keccak256(0, 32)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, 32) { deleteStart := data }\n                            let start := deleteStart\n                            for { }\n                            lt(start, add(data, shr(5, add(_8, 31))))\n                            { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 31)\n                        case 1 {\n                            mstore(0, add(dataSlot_3, /** @src 0:1272:1287  \"nextListingId++\" */ 0x02))\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            let dstPtr := keccak256(0, 32)\n                            let i := 0\n                            for { } lt(i, and(newLen, not(31))) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_7, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(and(newLen, not(31)), newLen)\n                            {\n                                let lastValue := mload(add(_7, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(add(dataSlot_3, /** @src 0:1272:1287  \"nextListingId++\" */ 0x02), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_3 := 0\n                            if newLen\n                            {\n                                value_3 := mload(add(_7, srcOffset))\n                            }\n                            sstore(add(dataSlot_3, /** @src 0:1272:1287  \"nextListingId++\" */ 0x02), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        let _9 := mload(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 96))\n                        let newLen_1 := mload(_9)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _10 := extract_byte_array_length(sload(add(dataSlot_3, 3)))\n                        if gt(_10, 31)\n                        {\n                            mstore(0, add(dataSlot_3, 3))\n                            let data_1 := keccak256(0, 32)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, add(data_1, shr(5, add(_10, 31))))\n                            { start_1 := add(start_1, 1) }\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            mstore(0, add(dataSlot_3, 3))\n                            let dstPtr_1 := keccak256(0, 32)\n                            let i_1 := 0\n                            for { } lt(i_1, and(newLen_1, not(31))) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(_9, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(and(newLen_1, not(31)), newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_9, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(add(dataSlot_3, 3), add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_4 := 0\n                            if newLen_1\n                            {\n                                value_4 := mload(add(_9, srcOffset_1))\n                            }\n                            sstore(add(dataSlot_3, 3), or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        let memberSlot := add(dataSlot_3, 4)\n                        let _11 := mload(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 128))\n                        let newLen_2 := mload(_11)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _12 := extract_byte_array_length(sload(memberSlot))\n                        if gt(_12, 31)\n                        {\n                            mstore(0, memberSlot)\n                            let data_2 := keccak256(0, 32)\n                            let deleteStart_2 := add(data_2, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, 32) { deleteStart_2 := data_2 }\n                            let _13 := add(data_2, shr(5, add(_12, 31)))\n                            let start_2 := deleteStart_2\n                            for { } lt(start_2, _13) { start_2 := add(start_2, 1) }\n                            { sstore(start_2, 0) }\n                        }\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 32\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd := and(newLen_2, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr_2 := keccak256(0, 32)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr_2, mload(add(_11, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, 1)\n                                srcOffset_2 := add(srcOffset_2, 32)\n                            }\n                            if lt(loopEnd, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(_11, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(1, newLen_2), 1))\n                        }\n                        default {\n                            let value_5 := 0\n                            if newLen_2\n                            {\n                                value_5 := mload(add(_11, srcOffset_2))\n                            }\n                            sstore(memberSlot, or(and(value_5, not(shr(shl(3, newLen_2), not(0)))), shl(1, newLen_2)))\n                        }\n                        update_storage_value_offsett_bool_to_bool(add(dataSlot_3, 5), iszero(iszero(mload(/** @src 0:1328:1559  \"DataListing({...\" */ add(memPtr_3, 160)))))\n                        /// @src 0:1583:1638  \"DataListed(listingId, msg.sender, _price, _description)\"\n                        let _14 := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(64)\n                        mstore(_14, calldataload(4))\n                        mstore(add(_14, 32), 64)\n                        /// @src 0:1583:1638  \"DataListed(listingId, msg.sender, _price, _description)\"\n                        log3(_14, sub(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ abi_encode_string(value3, add(_14, 64)), /** @src 0:1583:1638  \"DataListed(listingId, msg.sender, _price, _description)\" */ _14), 0x311d3bd27ae3dbd19bf3422e78b7bb536b01ad6f6ca117e48b49f30991d60931, _4, /** @src 0:1362:1372  \"msg.sender\" */ caller())\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _4)\n                        return(memPos_3, 32)\n                    }\n                    case 0x84c4f594 {\n                        let _15 := 32\n                        if slt(add(calldatasize(), not(3)), _15) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        mstore(0, value_6)\n                        mstore(_15, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        let _16 := sub(shl(160, 1), 1)\n                        /// @src 0:1840:1903  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:1848:1876  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ and(sload(/** @src 0:1848:1862  \"listing.seller\" */ dataSlot_4), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _16))))\n                        if iszero(and(sload(/** @src 0:1921:1935  \"listing.active\" */ add(dataSlot_4, 5)), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0xff))\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), _15)\n                            mstore(add(memPtr_4, 36), 21)\n                            mstore(add(memPtr_4, 68), \"Listing is not active\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 0:1992:2005  \"listing.price\"\n                        let _17 := add(dataSlot_4, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1)\n                        if /** @src 0:1979:2005  \"msg.value >= listing.price\" */ lt(/** @src 0:1979:1988  \"msg.value\" */ callvalue(), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sload(/** @src 0:1992:2005  \"listing.price\" */ _17))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), _15)\n                            mstore(add(memPtr_5, 36), 20)\n                            mstore(add(memPtr_5, 68), \"Insufficient payment\")\n                            revert(memPtr_5, 100)\n                        }\n                        mstore(0, /** @src 0:2090:2100  \"msg.sender\" */ caller())\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        mstore(_15, 1)\n                        let dataSlot_5 := keccak256(0, 64)\n                        let oldLen := sload(dataSlot_5)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_5, add(oldLen, 1))\n                        let slot_1, offset_4 := storage_array_index_access_uint256_dyn(dataSlot_5, oldLen)\n                        let _18 := sload(slot_1)\n                        let shiftBits := shl(3, offset_4)\n                        let mask := shl(shiftBits, not(0))\n                        sstore(slot_1, or(and(_18, not(mask)), and(shl(shiftBits, value_6), mask)))\n                        let cleaned_1 := and(sload(/** @src 0:2194:2208  \"listing.seller\" */ dataSlot_4), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _16)\n                        /// @src 0:2194:2239  \"listing.seller.call{value: listing.price}(\\\"\\\")\"\n                        let expr_component := call(gas(), cleaned_1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sload(/** @src 0:2221:2234  \"listing.price\" */ _17), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0, 0, 0, 0)\n                        /// @src 0:2194:2239  \"listing.seller.call{value: listing.price}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        if iszero(expr_component)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), _15)\n                            mstore(add(memPtr_6, 36), 23)\n                            mstore(add(memPtr_6, 68), \"Payment transfer failed\")\n                            revert(memPtr_6, 100)\n                        }\n                        let _19 := sload(/** @src 0:2367:2380  \"listing.price\" */ _17)\n                        /// @src 0:2351:2538  \"if (msg.value > listing.price) {...\"\n                        if /** @src 0:2355:2380  \"msg.value > listing.price\" */ gt(/** @src 0:1979:1988  \"msg.value\" */ callvalue(), /** @src 0:2355:2380  \"msg.value > listing.price\" */ _19)\n                        /// @src 0:2351:2538  \"if (msg.value > listing.price) {...\"\n                        {\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            let diff := sub(/** @src 0:1979:1988  \"msg.value\" */ callvalue(), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _19)\n                            if gt(diff, /** @src 0:1979:1988  \"msg.value\" */ callvalue())\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:2421:2474  \"msg.sender.call{value: msg.value - listing.price}(\\\"\\\")\"\n                            let expr_component_1 := call(gas(), /** @src 0:2090:2100  \"msg.sender\" */ caller(), /** @src 0:2421:2474  \"msg.sender.call{value: msg.value - listing.price}(\\\"\\\")\" */ diff, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0, 0, 0, 0)\n                            /// @src 0:2421:2474  \"msg.sender.call{value: msg.value - listing.price}(\\\"\\\")\"\n                            pop(extract_returndata())\n                            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                            if iszero(expr_component_1)\n                            {\n                                let memPtr_7 := mload(64)\n                                mstore(memPtr_7, shl(229, 4594637))\n                                mstore(add(memPtr_7, 4), _15)\n                                mstore(add(memPtr_7, 36), 13)\n                                mstore(add(memPtr_7, 68), \"Refund failed\")\n                                revert(memPtr_7, 100)\n                            }\n                        }\n                        let cleaned_2 := and(sload(/** @src 0:2599:2613  \"listing.seller\" */ dataSlot_4), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _16)\n                        let _20 := sload(/** @src 0:2615:2628  \"listing.price\" */ _17)\n                        /// @src 0:2561:2629  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\"\n                        let _21 := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(64)\n                        mstore(_21, _20)\n                        /// @src 0:2561:2629  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\"\n                        log4(_21, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _15, /** @src 0:2561:2629  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\" */ 0xd43f5f34801f2e70be3032e4807e0460394b94b06f8ec19842703ce34dc1874b, value_6, /** @src 0:2090:2100  \"msg.sender\" */ caller(), /** @src 0:2561:2629  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\" */ cleaned_2)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0xc4604943 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        let value_8 := calldataload(36)\n                        mstore(0, value_7)\n                        mstore(32, 0)\n                        let dataSlot_6 := keccak256(0, 64)\n                        let cleaned_3 := and(sload(/** @src 0:4324:4338  \"listing.seller\" */ dataSlot_6), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4316:4371  \"require(listing.seller == msg.sender, \\\"Not the seller\\\")\"\n                        require_helper_stringliteral_ce57(/** @src 0:4324:4352  \"listing.seller == msg.sender\" */ eq(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ cleaned_3, /** @src 0:4342:4352  \"msg.sender\" */ caller()))\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        sstore(/** @src 0:4390:4403  \"listing.price\" */ add(dataSlot_6, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1), value_8)\n                        let value_9 := and(sload(/** @src 0:4468:4482  \"listing.active\" */ add(dataSlot_6, 5)), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0xff)\n                        /// @src 0:4430:4483  \"ListingUpdated(_listingId, _newPrice, listing.active)\"\n                        let _22 := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(64)\n                        /// @src 0:4430:4483  \"ListingUpdated(_listingId, _newPrice, listing.active)\"\n                        log2(_22, sub(abi_encode_uint256_bool(_22, value_8, value_9), _22), 0x31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b, value_7)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0xc47f0f90 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(0, /** @src 0:4983:4993  \"msg.sender\" */ caller())\n                        /// @src 0:4973:4982  \"purchases\"\n                        let _23 := 0x01\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let _24 := 0x20\n                        mstore(_24, /** @src 0:4973:4982  \"purchases\" */ _23)\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length := sload(dataSlot_7)\n                        mstore(pos, length)\n                        pos := add(pos, _24)\n                        let pos_2 := pos\n                        mstore(0, dataSlot_7)\n                        let srcPtr := keccak256(0, _24)\n                        let i_3 := 0\n                        for { }\n                        lt(i_3, length)\n                        {\n                            i_3 := add(i_3, /** @src 0:4973:4982  \"purchases\" */ _23)\n                        }\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, _24)\n                            srcPtr := add(srcPtr, /** @src 0:4973:4982  \"purchases\" */ _23)\n                        }\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        let memPos_4 := mload(64)\n                        let tail_1 := add(memPos_4, _24)\n                        mstore(memPos_4, _24)\n                        let pos_3 := tail_1\n                        let length_1 := mload(pos_1)\n                        mstore(tail_1, length_1)\n                        pos_3 := add(memPos_4, 64)\n                        let srcPtr_1 := pos_2\n                        let i_4 := 0\n                        for { }\n                        lt(i_4, length_1)\n                        {\n                            i_4 := add(i_4, /** @src 0:4973:4982  \"purchases\" */ _23)\n                        }\n                        /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                        {\n                            mstore(pos_3, mload(srcPtr_1))\n                            pos_3 := add(pos_3, _24)\n                            srcPtr_1 := add(srcPtr_1, _24)\n                        }\n                        return(memPos_4, sub(pos_3, memPos_4))\n                    }\n                    case 0xde74e57b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let dataSlot_8 := keccak256(0, 64)\n                        let cleaned_4 := and(sload(/** @src 0:326:373  \"mapping(uint256 => DataListing) public listings\" */ dataSlot_8), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        let _25 := sload(/** @src 0:326:373  \"mapping(uint256 => DataListing) public listings\" */ add(dataSlot_8, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1))\n                        /// @src 0:326:373  \"mapping(uint256 => DataListing) public listings\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_8, 2))\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(dataSlot_8, 3))\n                        let ret_mpos_2 := copy_array_from_storage_to_memory_string(add(dataSlot_8, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 4))\n                        let value_10 := and(sload(/** @src 0:326:373  \"mapping(uint256 => DataListing) public listings\" */ add(dataSlot_8, 5)), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, cleaned_4)\n                        mstore(add(memPos_5, 32), _25)\n                        mstore(add(memPos_5, 64), 192)\n                        let tail_2 := abi_encode_string(ret_mpos, add(memPos_5, 192))\n                        mstore(add(memPos_5, 96), sub(tail_2, memPos_5))\n                        let tail_3 := abi_encode_string(ret_mpos_1, tail_2)\n                        mstore(add(memPos_5, 128), sub(tail_3, memPos_5))\n                        let tail_4 := abi_encode_string(ret_mpos_2, tail_3)\n                        mstore(add(memPos_5, 160), iszero(iszero(value_10)))\n                        return(memPos_5, sub(tail_4, memPos_5))\n                    }\n                    case 0xfb05da2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let dataSlot_9 := keccak256(0, 64)\n                        let cleaned_5 := and(sload(/** @src 0:3335:3349  \"listing.seller\" */ dataSlot_9), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:3327:3390  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:3335:3363  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ cleaned_5)))\n                        let _26 := sload(/** @src 0:3458:3471  \"listing.price\" */ add(dataSlot_9, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 1))\n                        let value_11 := and(sload(/** @src 0:3518:3532  \"listing.active\" */ add(dataSlot_9, 5)), /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0xff)\n                        /// @src 0:3409:3542  \"return (...\"\n                        let var_description_mpos := /** @src 0:58:5003  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:3485:3504  \"listing.description\" */ add(dataSlot_9, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 4))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned_5)\n                        mstore(add(memPos_6, 32), _26)\n                        mstore(add(memPos_6, 64), 128)\n                        let tail_5 := abi_encode_string(var_description_mpos, add(memPos_6, 128))\n                        mstore(add(memPos_6, 96), iszero(iszero(value_11)))\n                        return(memPos_6, sub(tail_5, memPos_6))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_string(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function require_helper_stringliteral_bfa5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Listing does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_string(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 262 @src 0:2706:3041  \"function hasPurchased(address _buyer, uint256 _listingId) public view returns (bool) {...\"\n            function fun_hasPurchased(var_buyer, var_listingId) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ and(var_buyer, sub(shl(160, 1), 1)))\n                /// @src 0:2834:2843  \"purchases\"\n                let _2 := 0x01\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                let _3 := 0x20\n                mstore(_3, /** @src 0:2834:2843  \"purchases\" */ _2)\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ 0x40)\n                let pos := mload(0x40)\n                let pos_1 := pos\n                let length := sload(dataSlot)\n                mstore(pos, length)\n                pos := add(pos, _3)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ dataSlot)\n                let srcPtr := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 0:2834:2843  \"purchases\" */ _2)\n                }\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, _3)\n                    srcPtr := add(srcPtr, /** @src 0:2834:2843  \"purchases\" */ _2)\n                }\n                /// @src 0:58:5003  \"contract DataMarketplace {...\"\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                /// @src 0:2866:2876  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 0:2861:3013  \"for (uint i = 0; i < userPurchases.length; i++) {...\"\n                for { }\n                /** @src 0:2834:2843  \"purchases\" */ _2\n                /// @src 0:2866:2876  \"uint i = 0\"\n                {\n                    /// @src 0:2904:2907  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 0:2878:2902  \"i < userPurchases.length\"\n                    if iszero(lt(var_i, /** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(/** @src 0:2882:2902  \"userPurchases.length\" */ pos_1)))\n                    /// @src 0:2878:2902  \"i < userPurchases.length\"\n                    { break }\n                    /// @src 0:2923:3003  \"if (userPurchases[i] == _listingId) {...\"\n                    if /** @src 0:2927:2957  \"userPurchases[i] == _listingId\" */ eq(/** @src 0:58:5003  \"contract DataMarketplace {...\" */ mload(add(add(pos_1, shl(5, var_i)), _3)), /** @src 0:2927:2957  \"userPurchases[i] == _listingId\" */ var_listingId)\n                    /// @src 0:2923:3003  \"if (userPurchases[i] == _listingId) {...\"\n                    {\n                        /// @src 0:2977:2988  \"return true\"\n                        var := /** @src 0:2834:2843  \"purchases\" */ _2\n                        /// @src 0:2977:2988  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 0:3022:3034  \"return false\"\n                var := /** @src -1:-1:-1 */ _1\n            }\n            /// @src 0:58:5003  \"contract DataMarketplace {...\"\n            function require_helper_stringliteral_ce57(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"Not the seller\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_bool(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122080be8e75a50a7a53f746e81c1730efc401995ec9713fe6764b03ed34a165273964736f6c63430008110033\"\n    }\n}\n","hash":"01000255023fe0482439ee283d0f7becb1171b31e37d6977599496a46f4f8eb3","factoryDependencies":{}}}}}}