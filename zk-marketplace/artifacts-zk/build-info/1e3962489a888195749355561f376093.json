{"id":"1e3962489a888195749355561f376093","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/ZKDataMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// Define the IERC20 interface directly to avoid version compatibility issues\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract DataMarketplace {\n    struct DataListing {\n        address seller;\n        uint256 price;\n        string availTxHash;\n        string availBlockHash;\n        string description;\n        bool active;\n    }\n    \n    // Token used for payments\n    IERC20 public paymentToken;\n    \n    // Mapping from listing ID to DataListing\n    mapping(uint256 => DataListing) public listings;\n    // Mapping from address to listing IDs they've purchased\n    mapping(address => uint256[]) public purchases;\n    // Counter for listing IDs\n    uint256 private nextListingId = 1;\n    \n    // Events\n    event DataListed(uint256 indexed listingId, address indexed seller, uint256 price, string description);\n    event DataPurchased(uint256 indexed listingId, address indexed buyer, address indexed seller, uint256 price);\n    event ListingUpdated(uint256 indexed listingId, uint256 newPrice, bool active);\n    \n    constructor(address _tokenAddress) {\n        paymentToken = IERC20(_tokenAddress);\n    }\n    \n    // List data for sale\n    function listData(uint256 _price, string memory _availTxHash, string memory _availBlockHash, string memory _description) external returns (uint256) {\n        require(bytes(_availTxHash).length > 0, \"Transaction hash cannot be empty\");\n        require(bytes(_availBlockHash).length > 0, \"Block hash cannot be empty\");\n        \n        uint256 listingId = nextListingId++;\n        \n        listings[listingId] = DataListing({\n            seller: msg.sender,\n            price: _price,\n            availTxHash: _availTxHash,\n            availBlockHash: _availBlockHash,\n            description: _description,\n            active: true\n        });\n        \n        emit DataListed(listingId, msg.sender, _price, _description);\n        return listingId;\n    }\n    \n    // Purchase data with ERC-20 token\n    function purchaseDataWithToken(uint256 _listingId, uint256 _amount) external {\n        DataListing storage listing = listings[_listingId];\n        \n        require(listing.seller != address(0), \"Listing does not exist\");\n        require(listing.active, \"Listing is not active\");\n        require(_amount >= listing.price, \"Insufficient payment\");\n        \n        // Record the purchase\n        purchases[msg.sender].push(_listingId);\n        \n        // Transfer tokens from buyer to seller\n        require(paymentToken.transferFrom(msg.sender, listing.seller, listing.price), \"Token transfer failed\");\n        \n        // Refund excess payment if any\n        if (_amount > listing.price) {\n            require(paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price), \"Refund failed\");\n        }\n        \n        emit DataPurchased(_listingId, msg.sender, listing.seller, listing.price);\n    }\n    \n    // Legacy method for backward compatibility - can be removed if not needed\n    function purchaseData(uint256 _listingId) external payable {\n        revert(\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\");\n    }\n    \n    // Check if an address has purchased a specific listing\n    function hasPurchased(address _buyer, uint256 _listingId) public view returns (bool) {\n        uint256[] memory userPurchases = purchases[_buyer];\n        for (uint i = 0; i < userPurchases.length; i++) {\n            if (userPurchases[i] == _listingId) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    // Get listing details\n    function getListingDetails(uint256 _listingId) external view returns (\n        address seller,\n        uint256 price,\n        string memory description,\n        bool active\n    ) {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller != address(0), \"Listing does not exist\");\n        \n        return (\n            listing.seller,\n            listing.price,\n            listing.description,\n            listing.active\n        );\n    }\n    \n    // Get data access details (only for buyers)\n    function getDataAccessDetails(uint256 _listingId) external view returns (\n        string memory availTxHash,\n        string memory availBlockHash\n    ) {\n        require(hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender, \"Not authorized\");\n        \n        DataListing storage listing = listings[_listingId];\n        require(listing.seller != address(0), \"Listing does not exist\");\n        \n        return (\n            listing.availTxHash,\n            listing.availBlockHash\n        );\n    }\n    \n    // Update listing price\n    function updateListingPrice(uint256 _listingId, uint256 _newPrice) external {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller == msg.sender, \"Not the seller\");\n        \n        listing.price = _newPrice;\n        emit ListingUpdated(_listingId, _newPrice, listing.active);\n    }\n    \n    // Activate/deactivate listing\n    function setListingStatus(uint256 _listingId, bool _active) external {\n        DataListing storage listing = listings[_listingId];\n        require(listing.seller == msg.sender, \"Not the seller\");\n        \n        listing.active = _active;\n        emit ListingUpdated(_listingId, listing.price, _active);\n    }\n    \n    // Get all purchases for a buyer\n    function getPurchases() external view returns (uint256[] memory) {\n        return purchases[msg.sender];\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ZKDataMarketplace.sol:89:27:\n   |\n89 |     function purchaseData(uint256 _listingId) external payable {\n   |                           ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"file":"contracts/ZKDataMarketplace.sol","start":3658,"end":3676},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.13","sources":{"contracts/ZKDataMarketplace.sol":{"id":0,"ast":{"absolutePath":"contracts/ZKDataMarketplace.sol","exportedSymbols":{"DataMarketplace":[527],"IERC20":[68]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":68,"linearizedBaseContracts":[68],"name":"IERC20","nameLocation":"146:6:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"18160ddd","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"168:11:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"179:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"205:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"204:9:0"},"scope":68,"src":"159:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":13,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"228:9:0","nodeType":"FunctionDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"account","nameLocation":"246:7:0","nodeType":"VariableDeclaration","scope":13,"src":"238:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"237:17:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13,"src":"278:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"277:9:0"},"scope":68,"src":"219:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":22,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"301:8:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"recipient","nameLocation":"318:9:0","nodeType":"VariableDeclaration","scope":22,"src":"310:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"amount","nameLocation":"337:6:0","nodeType":"VariableDeclaration","scope":22,"src":"329:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"309:35:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":22,"src":"363:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19,"name":"bool","nodeType":"ElementaryTypeName","src":"363:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"362:6:0"},"scope":68,"src":"292:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"383:9:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"owner","nameLocation":"401:5:0","nodeType":"VariableDeclaration","scope":31,"src":"393:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"spender","nameLocation":"416:7:0","nodeType":"VariableDeclaration","scope":31,"src":"408:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:32:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31,"src":"448:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"447:9:0"},"scope":68,"src":"374:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"471:7:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"spender","nameLocation":"487:7:0","nodeType":"VariableDeclaration","scope":40,"src":"479:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"amount","nameLocation":"504:6:0","nodeType":"VariableDeclaration","scope":40,"src":"496:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:33:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"530:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37,"name":"bool","nodeType":"ElementaryTypeName","src":"530:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"529:6:0"},"scope":68,"src":"462:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":51,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"550:12:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"sender","nameLocation":"571:6:0","nodeType":"VariableDeclaration","scope":51,"src":"563:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"563:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"recipient","nameLocation":"587:9:0","nodeType":"VariableDeclaration","scope":51,"src":"579:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"amount","nameLocation":"606:6:0","nodeType":"VariableDeclaration","scope":51,"src":"598:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:51:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51,"src":"632:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48,"name":"bool","nodeType":"ElementaryTypeName","src":"632:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"631:6:0"},"scope":68,"src":"541:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":59,"name":"Transfer","nameLocation":"654:8:0","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"679:4:0","nodeType":"VariableDeclaration","scope":59,"src":"663:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"701:2:0","nodeType":"VariableDeclaration","scope":59,"src":"685:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"713:5:0","nodeType":"VariableDeclaration","scope":59,"src":"705:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"662:57:0"},"src":"648:72:0"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":67,"name":"Approval","nameLocation":"731:8:0","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"756:5:0","nodeType":"VariableDeclaration","scope":67,"src":"740:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"779:7:0","nodeType":"VariableDeclaration","scope":67,"src":"763:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"796:5:0","nodeType":"VariableDeclaration","scope":67,"src":"788:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"739:63:0"},"src":"725:78:0"}],"scope":528,"src":"136:669:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"DataMarketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":527,"linearizedBaseContracts":[527],"name":"DataMarketplace","nameLocation":"816:15:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataMarketplace.DataListing","id":81,"members":[{"constant":false,"id":70,"mutability":"mutable","name":"seller","nameLocation":"875:6:0","nodeType":"VariableDeclaration","scope":81,"src":"867:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"price","nameLocation":"899:5:0","nodeType":"VariableDeclaration","scope":81,"src":"891:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"availTxHash","nameLocation":"921:11:0","nodeType":"VariableDeclaration","scope":81,"src":"914:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":73,"name":"string","nodeType":"ElementaryTypeName","src":"914:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"availBlockHash","nameLocation":"949:14:0","nodeType":"VariableDeclaration","scope":81,"src":"942:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":75,"name":"string","nodeType":"ElementaryTypeName","src":"942:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"description","nameLocation":"980:11:0","nodeType":"VariableDeclaration","scope":81,"src":"973:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":77,"name":"string","nodeType":"ElementaryTypeName","src":"973:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"active","nameLocation":"1006:6:0","nodeType":"VariableDeclaration","scope":81,"src":"1001:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"1001:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DataListing","nameLocation":"845:11:0","nodeType":"StructDefinition","scope":527,"src":"838:181:0","visibility":"public"},{"constant":false,"functionSelector":"3013ce29","id":84,"mutability":"mutable","name":"paymentToken","nameLocation":"1074:12:0","nodeType":"VariableDeclaration","scope":527,"src":"1060:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"},"typeName":{"id":83,"nodeType":"UserDefinedTypeName","pathNode":{"id":82,"name":"IERC20","nameLocations":["1060:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"1060:6:0"},"referencedDeclaration":68,"src":"1060:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"de74e57b","id":89,"mutability":"mutable","name":"listings","nameLocation":"1182:8:0","nodeType":"VariableDeclaration","scope":527,"src":"1143:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing)"},"typeName":{"id":88,"keyType":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1143:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing)"},"valueType":{"id":87,"nodeType":"UserDefinedTypeName","pathNode":{"id":86,"name":"DataListing","nameLocations":["1162:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"1162:11:0"},"referencedDeclaration":81,"src":"1162:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}}},"visibility":"public"},{"constant":false,"functionSelector":"52d3f849","id":94,"mutability":"mutable","name":"purchases","nameLocation":"1294:9:0","nodeType":"VariableDeclaration","scope":527,"src":"1257:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":93,"keyType":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1257:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1276:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":92,"nodeType":"ArrayTypeName","src":"1276:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"id":97,"mutability":"mutable","name":"nextListingId","nameLocation":"1356:13:0","nodeType":"VariableDeclaration","scope":527,"src":"1340:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"311d3bd27ae3dbd19bf3422e78b7bb536b01ad6f6ca117e48b49f30991d60931","id":107,"name":"DataListed","nameLocation":"1404:10:0","nodeType":"EventDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"1431:9:0","nodeType":"VariableDeclaration","scope":107,"src":"1415:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1458:6:0","nodeType":"VariableDeclaration","scope":107,"src":"1442:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1474:5:0","nodeType":"VariableDeclaration","scope":107,"src":"1466:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":105,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1488:11:0","nodeType":"VariableDeclaration","scope":107,"src":"1481:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":104,"name":"string","nodeType":"ElementaryTypeName","src":"1481:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1414:86:0"},"src":"1398:103:0"},{"anonymous":false,"eventSelector":"d43f5f34801f2e70be3032e4807e0460394b94b06f8ec19842703ce34dc1874b","id":117,"name":"DataPurchased","nameLocation":"1512:13:0","nodeType":"EventDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"1542:9:0","nodeType":"VariableDeclaration","scope":117,"src":"1526:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1569:5:0","nodeType":"VariableDeclaration","scope":117,"src":"1553:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"1553:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1592:6:0","nodeType":"VariableDeclaration","scope":117,"src":"1576:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1608:5:0","nodeType":"VariableDeclaration","scope":117,"src":"1600:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1525:89:0"},"src":"1506:109:0"},{"anonymous":false,"eventSelector":"31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b","id":125,"name":"ListingUpdated","nameLocation":"1626:14:0","nodeType":"EventDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"indexed":true,"mutability":"mutable","name":"listingId","nameLocation":"1657:9:0","nodeType":"VariableDeclaration","scope":125,"src":"1641:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"1676:8:0","nodeType":"VariableDeclaration","scope":125,"src":"1668:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"active","nameLocation":"1691:6:0","nodeType":"VariableDeclaration","scope":125,"src":"1686:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":122,"name":"bool","nodeType":"ElementaryTypeName","src":"1686:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1640:58:0"},"src":"1620:79:0"},{"body":{"id":136,"nodeType":"Block","src":"1744:53:0","statements":[{"expression":{"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1754:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":132,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1776:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":131,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1769:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$68_$","typeString":"type(contract IERC20)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"src":"1754:36:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"id":135,"nodeType":"ExpressionStatement","src":"1754:36:0"}]},"id":137,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1729:13:0","nodeType":"VariableDeclaration","scope":137,"src":"1721:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1720:23:0"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"1744:0:0"},"scope":527,"src":"1709:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":201,"nodeType":"Block","src":"1981:605:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":153,"name":"_availTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2005:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1999:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":151,"name":"bytes","nodeType":"ElementaryTypeName","src":"1999:5:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1999:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2019:6:0","memberName":"length","nodeType":"MemberAccess","src":"1999:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1999:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e20686173682063616e6e6f7420626520656d707479","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2031:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a09198095e2f4be32405c27fb98b7fefd18bff97a5c3f9d35f5ce692439f86ec","typeString":"literal_string \"Transaction hash cannot be empty\""},"value":"Transaction hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a09198095e2f4be32405c27fb98b7fefd18bff97a5c3f9d35f5ce692439f86ec","typeString":"literal_string \"Transaction hash cannot be empty\""}],"id":150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1991:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1991:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":160,"nodeType":"ExpressionStatement","src":"1991:75:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":164,"name":"_availBlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2090:15:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2084:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":162,"name":"bytes","nodeType":"ElementaryTypeName","src":"2084:5:0","typeDescriptions":{}}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2107:6:0","memberName":"length","nodeType":"MemberAccess","src":"2084:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2116:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2084:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426c6f636b20686173682063616e6e6f7420626520656d707479","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2119:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_96205ac095239a0032d272635098a1e2b6cf408b401d4dcf3a0740db10b7dab1","typeString":"literal_string \"Block hash cannot be empty\""},"value":"Block hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96205ac095239a0032d272635098a1e2b6cf408b401d4dcf3a0740db10b7dab1","typeString":"literal_string \"Block hash cannot be empty\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2076:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2076:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"2076:72:0"},{"assignments":[173],"declarations":[{"constant":false,"id":173,"mutability":"mutable","name":"listingId","nameLocation":"2175:9:0","nodeType":"VariableDeclaration","scope":201,"src":"2167:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":176,"initialValue":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2187:15:0","subExpression":{"id":174,"name":"nextListingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2187:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2167:35:0"},{"expression":{"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":177,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2221:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":179,"indexExpression":{"id":178,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2230:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2221:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2277:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2277:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":183,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2308:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":184,"name":"_availTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2341:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":185,"name":"_availBlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2383:15:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":186,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2425:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2459:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":180,"name":"DataListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2243:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DataListing_$81_storage_ptr_$","typeString":"type(struct DataMarketplace.DataListing storage pointer)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2269:6:0","2301:5:0","2328:11:0","2367:14:0","2412:11:0","2451:6:0"],"names":["seller","price","availTxHash","availBlockHash","description","active"],"nodeType":"FunctionCall","src":"2243:231:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_memory_ptr","typeString":"struct DataMarketplace.DataListing memory"}},"src":"2221:253:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"id":190,"nodeType":"ExpressionStatement","src":"2221:253:0"},{"eventCall":{"arguments":[{"id":192,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2509:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2520:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2524:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2520:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":195,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2532:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":196,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2540:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":191,"name":"DataListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2498:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"2493:60:0"},{"expression":{"id":199,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2570:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":149,"id":200,"nodeType":"Return","src":"2563:16:0"}]},"functionSelector":"83584530","id":202,"implemented":true,"kind":"function","modifiers":[],"name":"listData","nameLocation":"1842:8:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"_price","nameLocation":"1859:6:0","nodeType":"VariableDeclaration","scope":202,"src":"1851:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"_availTxHash","nameLocation":"1881:12:0","nodeType":"VariableDeclaration","scope":202,"src":"1867:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":140,"name":"string","nodeType":"ElementaryTypeName","src":"1867:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"_availBlockHash","nameLocation":"1909:15:0","nodeType":"VariableDeclaration","scope":202,"src":"1895:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1895:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"_description","nameLocation":"1940:12:0","nodeType":"VariableDeclaration","scope":202,"src":"1926:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"1926:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1850:103:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1972:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:0"},"scope":527,"src":"1833:753:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":293,"nodeType":"Block","src":"2712:835:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"mutability":"mutable","name":"listing","nameLocation":"2742:7:0","nodeType":"VariableDeclaration","scope":293,"src":"2722:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"DataListing","nameLocations":["2722:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"2722:11:0"},"referencedDeclaration":81,"src":"2722:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":215,"initialValue":{"baseExpression":{"id":212,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2752:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":214,"indexExpression":{"id":213,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2761:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2752:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2722:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":217,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2799:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2799:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2817:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2799:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2829:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2791:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"2791:63:0"},{"expression":{"arguments":[{"expression":{"id":228,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2872:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2880:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":80,"src":"2872:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e67206973206e6f7420616374697665","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2888:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""},"value":"Listing is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690","typeString":"literal_string \"Listing is not active\""}],"id":227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2864:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"2864:48:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":234,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"2930:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":235,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2941:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2949:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"2941:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2930:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2956:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2922:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2922:57:0"},{"expression":{"arguments":[{"id":246,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3056:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":241,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3029:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":244,"indexExpression":{"expression":{"id":242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3039:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3043:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3039:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3029:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3051:4:0","memberName":"push","nodeType":"MemberAccess","src":"3029:26:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"3029:38:0"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3168:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3168:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":254,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3180:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3188:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3180:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":256,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3196:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3204:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"3196:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":250,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3142:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3155:12:0","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":51,"src":"3142:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3142:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3212:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3134:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":261,"nodeType":"ExpressionStatement","src":"3134:102:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":262,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3299:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":263,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3309:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3317:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"3309:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3299:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":282,"nodeType":"IfStatement","src":"3295:154:0","trueBody":{"id":281,"nodeType":"Block","src":"3324:125:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3372:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3376:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3372:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3384:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3388:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3384:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":274,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3406:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3414:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"3406:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3396:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":267,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3346:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$68","typeString":"contract IERC20"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3359:12:0","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":51,"src":"3346:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3422:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3338:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:100:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"3338:100:0"}]}},{"eventCall":{"arguments":[{"id":284,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3486:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":285,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3498:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3502:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3498:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":287,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3518:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3510:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":289,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3526:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3534:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"3526:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":283,"name":"DataPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3472:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"EmitStatement","src":"3467:73:0"}]},"functionSelector":"a56a735b","id":294,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseDataWithToken","nameLocation":"2644:21:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"_listingId","nameLocation":"2674:10:0","nodeType":"VariableDeclaration","scope":294,"src":"2666:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"_amount","nameLocation":"2694:7:0","nodeType":"VariableDeclaration","scope":294,"src":"2686:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2712:0:0"},"scope":527,"src":"2635:912:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":303,"nodeType":"Block","src":"3695:110:0","statements":[{"expression":{"arguments":[{"hexValue":"54686973206d61726b6574706c616365206e6f77207573657320746f6b656e207061796d656e74732e20506c65617365207573652070757263686173654461746157697468546f6b656e20696e73746561642e","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3712:85:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fe4a4ec6f82a3d014df972e59efd51be4af5117b2ac876d5a4d3661be9f488","typeString":"literal_string \"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\""},"value":"This marketplace now uses token payments. Please use purchaseDataWithToken instead."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e4fe4a4ec6f82a3d014df972e59efd51be4af5117b2ac876d5a4d3661be9f488","typeString":"literal_string \"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\""}],"id":299,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3705:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"3705:93:0"}]},"functionSelector":"84c4f594","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseData","nameLocation":"3645:12:0","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"_listingId","nameLocation":"3666:10:0","nodeType":"VariableDeclaration","scope":304,"src":"3658:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3657:20:0"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"3695:0:0"},"scope":527,"src":"3636:169:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":346,"nodeType":"Block","src":"3960:250:0","statements":[{"assignments":[317],"declarations":[{"constant":false,"id":317,"mutability":"mutable","name":"userPurchases","nameLocation":"3987:13:0","nodeType":"VariableDeclaration","scope":346,"src":"3970:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":316,"nodeType":"ArrayTypeName","src":"3970:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":321,"initialValue":{"baseExpression":{"id":318,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4003:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":320,"indexExpression":{"id":319,"name":"_buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4013:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4003:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3970:50:0"},{"body":{"id":342,"nodeType":"Block","src":"4078:104:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":333,"name":"userPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4096:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":335,"indexExpression":{"id":334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4110:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4096:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":336,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4116:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4096:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":341,"nodeType":"IfStatement","src":"4092:80:0","trueBody":{"id":340,"nodeType":"Block","src":"4128:44:0","statements":[{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4153:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":312,"id":339,"nodeType":"Return","src":"4146:11:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4047:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":327,"name":"userPurchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4051:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4065:6:0","memberName":"length","nodeType":"MemberAccess","src":"4051:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4047:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"i","nameLocation":"4040:1:0","nodeType":"VariableDeclaration","scope":343,"src":"4035:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4035:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":325,"initialValue":{"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4044:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4035:10:0"},"loopExpression":{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4073:3:0","subExpression":{"id":330,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4073:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":332,"nodeType":"ExpressionStatement","src":"4073:3:0"},"nodeType":"ForStatement","src":"4030:152:0"},{"expression":{"hexValue":"66616c7365","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4198:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":312,"id":345,"nodeType":"Return","src":"4191:12:0"}]},"functionSelector":"11923132","id":347,"implemented":true,"kind":"function","modifiers":[],"name":"hasPurchased","nameLocation":"3884:12:0","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"_buyer","nameLocation":"3905:6:0","nodeType":"VariableDeclaration","scope":347,"src":"3897:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"3897:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"_listingId","nameLocation":"3921:10:0","nodeType":"VariableDeclaration","scope":347,"src":"3913:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3913:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:36:0"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"3954:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"3954:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3953:6:0"},"scope":527,"src":"3875:335:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":388,"nodeType":"Block","src":"4426:292:0","statements":[{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"listing","nameLocation":"4456:7:0","nodeType":"VariableDeclaration","scope":388,"src":"4436:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"DataListing","nameLocations":["4436:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"4436:11:0"},"referencedDeclaration":81,"src":"4436:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":366,"initialValue":{"baseExpression":{"id":363,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4466:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":365,"indexExpression":{"id":364,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4475:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4466:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4436:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":368,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4504:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4512:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4504:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4530:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4522:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"4522:7:0","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4522:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4504:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4534:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4496:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4496:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4496:63:0"},{"expression":{"components":[{"expression":{"id":378,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4599:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4607:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":380,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4627:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4635:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"4627:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":382,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4654:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4662:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":78,"src":"4654:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":384,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4687:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4695:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":80,"src":"4687:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4585:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_string_storage_$_t_bool_$","typeString":"tuple(address,uint256,string storage ref,bool)"}},"functionReturnParameters":359,"id":387,"nodeType":"Return","src":"4578:133:0"}]},"functionSelector":"fb05da2e","id":389,"implemented":true,"kind":"function","modifiers":[],"name":"getListingDetails","nameLocation":"4256:17:0","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"_listingId","nameLocation":"4282:10:0","nodeType":"VariableDeclaration","scope":389,"src":"4274:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4273:20:0"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"seller","nameLocation":"4334:6:0","nodeType":"VariableDeclaration","scope":389,"src":"4326:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"4326:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"price","nameLocation":"4358:5:0","nodeType":"VariableDeclaration","scope":389,"src":"4350:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"description","nameLocation":"4387:11:0","nodeType":"VariableDeclaration","scope":389,"src":"4373:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":355,"name":"string","nodeType":"ElementaryTypeName","src":"4373:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"active","nameLocation":"4413:6:0","nodeType":"VariableDeclaration","scope":389,"src":"4408:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":357,"name":"bool","nodeType":"ElementaryTypeName","src":"4408:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4316:109:0"},"scope":527,"src":"4247:471:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":439,"nodeType":"Block","src":"4929:372:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4960:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4964:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4960:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4972:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":399,"name":"hasPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4947:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":404,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4987:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":406,"indexExpression":{"id":405,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4996:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4987:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5008:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4987:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5018:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5022:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5018:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4987:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4947:81:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5030:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4939:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:108:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"4939:108:0"},{"assignments":[417],"declarations":[{"constant":false,"id":417,"mutability":"mutable","name":"listing","nameLocation":"5086:7:0","nodeType":"VariableDeclaration","scope":439,"src":"5066:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"DataListing","nameLocations":["5066:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5066:11:0"},"referencedDeclaration":81,"src":"5066:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":421,"initialValue":{"baseExpression":{"id":418,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"5096:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":420,"indexExpression":{"id":419,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5105:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5096:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5066:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":423,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5134:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5142:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"5134:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5160:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5152:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5152:7:0","typeDescriptions":{}}},"id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5152:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5134:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697374696e6720646f6573206e6f74206578697374","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5164:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""},"value":"Listing does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55","typeString":"literal_string \"Listing does not exist\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5126:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"5126:63:0"},{"expression":{"components":[{"expression":{"id":433,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5229:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5237:11:0","memberName":"availTxHash","nodeType":"MemberAccess","referencedDeclaration":74,"src":"5229:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":435,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5262:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5270:14:0","memberName":"availBlockHash","nodeType":"MemberAccess","referencedDeclaration":76,"src":"5262:22:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5215:79:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_string_storage_$","typeString":"tuple(string storage ref,string storage ref)"}},"functionReturnParameters":397,"id":438,"nodeType":"Return","src":"5208:86:0"}]},"functionSelector":"0c690e57","id":440,"implemented":true,"kind":"function","modifiers":[],"name":"getDataAccessDetails","nameLocation":"4786:20:0","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"_listingId","nameLocation":"4815:10:0","nodeType":"VariableDeclaration","scope":440,"src":"4807:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4806:20:0"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"availTxHash","nameLocation":"4873:11:0","nodeType":"VariableDeclaration","scope":440,"src":"4859:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":393,"name":"string","nodeType":"ElementaryTypeName","src":"4859:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"availBlockHash","nameLocation":"4908:14:0","nodeType":"VariableDeclaration","scope":440,"src":"4894:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"4894:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4849:79:0"},"scope":527,"src":"4777:524:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":476,"nodeType":"Block","src":"5415:244:0","statements":[{"assignments":[449],"declarations":[{"constant":false,"id":449,"mutability":"mutable","name":"listing","nameLocation":"5445:7:0","nodeType":"VariableDeclaration","scope":476,"src":"5425:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":448,"nodeType":"UserDefinedTypeName","pathNode":{"id":447,"name":"DataListing","nameLocations":["5425:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5425:11:0"},"referencedDeclaration":81,"src":"5425:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":453,"initialValue":{"baseExpression":{"id":450,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"5455:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":452,"indexExpression":{"id":451,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5464:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5455:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5425:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":455,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5493:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5501:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"5493:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5511:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5511:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5493:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652073656c6c6572","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5523:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""},"value":"Not the seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""}],"id":454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5485:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5485:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"5485:55:0"},{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":463,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5559:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5567:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"5559:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":466,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5575:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5559:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"5559:25:0"},{"eventCall":{"arguments":[{"id":470,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5614:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5626:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":472,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5637:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5645:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":80,"src":"5637:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":469,"name":"ListingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5599:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"EmitStatement","src":"5594:58:0"}]},"functionSelector":"c4604943","id":477,"implemented":true,"kind":"function","modifiers":[],"name":"updateListingPrice","nameLocation":"5348:18:0","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"_listingId","nameLocation":"5375:10:0","nodeType":"VariableDeclaration","scope":477,"src":"5367:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"_newPrice","nameLocation":"5395:9:0","nodeType":"VariableDeclaration","scope":477,"src":"5387:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5366:39:0"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"5415:0:0"},"scope":527,"src":"5339:320:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":513,"nodeType":"Block","src":"5773:240:0","statements":[{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"listing","nameLocation":"5803:7:0","nodeType":"VariableDeclaration","scope":513,"src":"5783:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"},"typeName":{"id":485,"nodeType":"UserDefinedTypeName","pathNode":{"id":484,"name":"DataListing","nameLocations":["5783:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5783:11:0"},"referencedDeclaration":81,"src":"5783:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing"}},"visibility":"internal"}],"id":490,"initialValue":{"baseExpression":{"id":487,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"5813:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DataListing_$81_storage_$","typeString":"mapping(uint256 => struct DataMarketplace.DataListing storage ref)"}},"id":489,"indexExpression":{"id":488,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5822:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage","typeString":"struct DataMarketplace.DataListing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5783:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":492,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5851:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5859:6:0","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":70,"src":"5851:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5869:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5873:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5869:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5851:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652073656c6c6572","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5881:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""},"value":"Not the seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce57addf3f5de810402cc65bacdf9d6eb19fb240991cacfdb84749b70a2ea3ec","typeString":"literal_string \"Not the seller\""}],"id":491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5843:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5843:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"5843:55:0"},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":500,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5917:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5925:6:0","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":80,"src":"5917:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":503,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5917:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"ExpressionStatement","src":"5917:24:0"},{"eventCall":{"arguments":[{"id":507,"name":"_listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5971:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":508,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5983:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_DataListing_$81_storage_ptr","typeString":"struct DataMarketplace.DataListing storage pointer"}},"id":509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5991:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":72,"src":"5983:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":510,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"5998:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":506,"name":"ListingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"5956:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5956:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"EmitStatement","src":"5951:55:0"}]},"functionSelector":"1e9644bc","id":514,"implemented":true,"kind":"function","modifiers":[],"name":"setListingStatus","nameLocation":"5713:16:0","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"_listingId","nameLocation":"5738:10:0","nodeType":"VariableDeclaration","scope":514,"src":"5730:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"_active","nameLocation":"5755:7:0","nodeType":"VariableDeclaration","scope":514,"src":"5750:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":480,"name":"bool","nodeType":"ElementaryTypeName","src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5729:34:0"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"5773:0:0"},"scope":527,"src":"5704:309:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":525,"nodeType":"Block","src":"6125:45:0","statements":[{"expression":{"baseExpression":{"id":520,"name":"purchases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"6142:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":523,"indexExpression":{"expression":{"id":521,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6152:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6156:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6152:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6142:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":519,"id":524,"nodeType":"Return","src":"6135:28:0"}]},"functionSelector":"c47f0f90","id":526,"implemented":true,"kind":"function","modifiers":[],"name":"getPurchases","nameLocation":"6069:12:0","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"6081:2:0"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"6107:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"6107:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":517,"nodeType":"ArrayTypeName","src":"6107:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6106:18:0"},"scope":527,"src":"6060:110:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":528,"src":"807:5365:0","usedErrors":[]}],"src":"32:6140:0"}}},"contracts":{"contracts/ZKDataMarketplace.sol":{"DataMarketplace":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"DataListed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"DataPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"ListingUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"getDataAccessDetails","outputs":[{"internalType":"string","name":"availTxHash","type":"string"},{"internalType":"string","name":"availBlockHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"getListingDetails","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPurchases","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_buyer","type":"address"},{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"hasPurchased","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"string","name":"_availTxHash","type":"string"},{"internalType":"string","name":"_availBlockHash","type":"string"},{"internalType":"string","name":"_description","type":"string"}],"name":"listData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"listings","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"availTxHash","type":"string"},{"internalType":"string","name":"availBlockHash","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"}],"name":"purchaseData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"purchaseDataWithToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"purchases","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"},{"internalType":"bool","name":"_active","type":"bool"}],"name":"setListingStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingId","type":"uint256"},{"internalType":"uint256","name":"_newPrice","type":"uint256"}],"name":"updateListingPrice","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"DataListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"DataPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ListingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"getDataAccessDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"availBlockHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"getListingDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPurchases\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"hasPurchased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_availBlockHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"listData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"availTxHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"availBlockHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"}],\"name\":\"purchaseData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchaseDataWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setListingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKDataMarketplace.sol\":\"DataMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ZKDataMarketplace.sol\":{\"keccak256\":\"0x3b4f4dbcac29b6d13b3eca0ac9e0e91e7f0badc54c886f12cf819c75d5472d25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f5b5185d3b19bfcb23ea3acb9a5c8a7a2b7fcb853bbbb390916340e1da35da\",\"dweb:/ipfs/QmPUUjb7xH146XAxyt7Hnf5GJ3T8kNs46dsKYU8MExmjPx\"]}},\"version\":1}","zk_version":"1.3.13"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ZKDataMarketplace.sol:DataMarketplace\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[15]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_21\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_28\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_52\n\tadd\t5, r1, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tadd\tstack-[14], r0, r4\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r4\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_24[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_54\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tadd\t159, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tsub.s!\t@CPI0_1[0], r2, r3\n\tjump.lt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\tsub.s!\t@CPI0_7[0], r1, r3\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_11[0], r1, r3\n\tjump.eq\t@.BB0_164\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_166\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_52\n\tadd\t1, r1, r2\n\tadd\tstack-[14], r0, r4\n\tsstore\tr2, r4\n\tadd\t5, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tst.1\tr2, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_24[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_54:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_5:\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_248\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr3, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_248:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\t3, r0, r3\n\tsstore\tr3, r2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t128, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_23[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr2, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_2[0], r3, r7\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tr2, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr2, r7, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tadd\tr6, r0, r2\n\tadd.eq\tr4, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r8\n\tand\tr1, r8, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_23[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tadd\tr8, r0, stack-[15]\n\tst.1\t64, r4\n\tst.1.inc\tr1, r2, r4\n\tadd\t36, r5, r5\n\tadd\tr2, r5, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB0_2\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_243\n\tadd\tr0, r0, r7\n.BB0_74:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_74\n.BB0_243:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_76\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr4, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB0_76:\n\tadd\tr4, r2, r2\n\tst.1\tr2, r0\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r5\n\tsub.s!\t@CPI0_23[0], r5, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r3\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr4, r0, r7\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r6, r8\n\tsub!\tr3, r8, r9\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr7, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_23[0], r3, r2\n\tadd\tstack-[15], r0, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r3, r2\n\tand\tr2, r4, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_23[0], r4, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr2, r3, r4\n\tadd\t36, r5, r7\n\tadd\tr3, r7, r5\n\tsub!\tr5, r6, r5\n\tjump.gt\t@.BB0_2\n\tand\t31, r3, r5\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_242\n\tadd\tr0, r0, r8\n.BB0_84:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_84\n.BB0_242:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_86:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t100, r3, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_23[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r4\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI0_2[0], r0, r7\n\tsub!\tr4, r6, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_2[0], r4, r4\n\tand\t@CPI0_2[0], r6, r9\n\tsub!\tr4, r9, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr4, r9, r4\n\tsub.s!\t@CPI0_2[0], r4, r4\n\tadd\tr8, r0, r4\n\tadd.eq\tr7, r0, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_23[0], r3, r4\n\tadd\tstack-[15], r0, r7\n\tjump.gt\t@.BB0_4\n\tadd\t63, r3, r4\n\tand\tr4, r7, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tadd\tr7, r0, stack-[13]\n\tsub!\tr4, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_23[0], r4, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tadd\tstack-[13], r0, r4\n\tst.1.inc\tr4, r3, r4\n\tadd\t36, r5, r7\n\tadd\tr3, r7, r5\n\tsub!\tr5, r6, r5\n\tjump.gt\t@.BB0_2\n\tand\t31, r3, r5\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_241\n\tadd\tr0, r0, r8\n.BB0_94:\n\tshl.s\t5, r8, r9\n\tadd\tr4, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_94\n.BB0_241:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_96\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_96:\n\tadd\tr4, r3, r3\n\tst.1\tr3, r0\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_98\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_25:\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_222\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_235\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr5, r0, stack-[15]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r2\n\tand!\t@CPI0_3[0], r2, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_bfa5, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tadd\t5, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t32, r4, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr4, r2\n\tadd\t128, r4, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tstack-[11], r0, r4\n\tadd\t96, r4, r3\n\tst.1\tr3, r2\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_28:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[14]\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tstack-[13], r0, r5\n\tadd\tr5, r0, r2\n\tjump.eq\t@.BB0_35\n\tld\tr1, r1\n\tadd\tr5, r0, r2\n\tadd\tr0, r0, r3\n.BB0_34:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_34\n.BB0_35:\n\tadd\tstack-[12], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_23[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[15], r0, r4\n\tjump.eq\t@.BB0_41\n\tadd\tr0, r0, r2\n.BB0_40:\n\tshl.s\t5, r2, r3\n\tadd\tr3, r5, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r4, r3\n\tjump.eq\t@.BB0_44\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tsub!\tr1, r2, r1\n\tadd\tstack-[15], r0, r4\n\tjump.ne\t@.BB0_43\n.BB0_44:\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r2\n\tand!\t@CPI0_3[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tnear_call\tr0, @require_helper_stringliteral_bfa5, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tadd\t2, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\t3, r2, r2\n\tadd\tr1, r0, stack-[13]\n\tadd\tr2, r0, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\tstack-[14], r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[14]\n\tadd\t64, r3, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r1\n\tsub\tr2, r1, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr3, r1\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_164:\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t83, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t260, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_222:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr3, r0, stack-[13]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[15], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB0_229\n\tld\tr1, r1\n\tadd\tr0, r0, r3\n\tadd\tr6, r0, r2\n.BB0_228:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_228\n.BB0_229:\n\tadd\tstack-[14], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_23[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr4, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_234\n\tadd\tr0, r0, r4\n.BB0_233:\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_233\n.BB0_234:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_hasPurchased, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_166:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tsload\tr2, r1\n\tand!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_171\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_58:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @storage_array_index_access_uint256_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_235:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_237\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_237:\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t2, r2, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[15], r0, r1\n\tadd\t3, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[15], r0, r1\n\tadd\t4, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tadd\t5, r2, r2\n\tadd\tr1, r0, stack-[13]\n\tsload\tr2, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t32, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t192, r0, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t192, r3, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r3\n\tsub\tr2, r3, r1\n\tadd\t96, r3, r3\n\tst.1\tr3, r1\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\t128, r3, r1\n\tsub\tr2, r3, r3\n\tst.1\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tstack-[15], r0, r4\n\tadd\t160, r4, r3\n\tst.1\tr3, r2\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_52:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_171:\n\tadd\t5, r2, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_173\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t21, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_173:\n\tadd\t1, r2, r3\n\tsload\tr3, r1\n\tadd\tstack-[15], r0, r4\n\tsub!\tr4, r1, r1\n\tjump.ge\t@.BB0_175\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_175:\n\tadd\tr3, r0, stack-[13]\n\tadd\tr2, r0, stack-[11]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\t@CPI0_23[0], r3, r2\n\tjump.gt\t@.BB0_4\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[10]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_178\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r2\n\tld.1\t64, r5\n\tadd\t68, r5, r3\n\tsload\tr0, r4\n\tst.1\tr3, r2\n\tand\t@CPI0_3[0], r1, r1\n\tadd\t36, r5, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\tr5, r1\n\tadd\tstack-[12], r0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tadd\tr5, r0, stack-[10]\n\tadd\t4, r5, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_3[0], r4, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_182\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_192\n.BB0_43:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_178:\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_182:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[10], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_28[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_247\n\tadd\tr0, r0, r7\n.BB0_184:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_184\n.BB0_247:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_186\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_186:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_187\n.BB0_192:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_198\n\tadd\tstack-[9], r0, r3\n\tadd\t68, r3, r1\n\tadd\t@CPI0_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t21, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_187:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_246\n\tadd\tr0, r0, r5\n.BB0_189:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_189\n.BB0_246:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_191\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_191:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_198:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_199\n\tadd\tstack-[15], r0, r2\n\tsub\tr2, r1, r1\n\tadd\tstack-[9], r0, r4\n\tadd\t68, r4, r2\n\tsload\tr0, r3\n\tst.1\tr2, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t36, r4, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r4, r1\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_3[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_202\n\tadd\tstack[@returndatasize], r0, r1\n\tsub.s!\t32, r1, r2\n\tadd\t32, r0, r3\n\tadd.lt\tr1, r0, r3\n\tjump\t@.BB0_212\n.BB0_202:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[9], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_28[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\t32, r0, r3\n\tadd.lt\tr4, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_245\n\tadd\tr0, r0, r7\n.BB0_204:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_204\n.BB0_245:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_206\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_206:\n\tadd\tr4, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_207\n.BB0_212:\n\tadd\t31, r3, r1\n\tand\t96, r1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tr1, r2, r1\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tadd\tr1, r0, stack-[9]\n\tjump.ne\t@.BB0_199\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t13, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_199:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[9], r0, r5\n\tst.1\tr5, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tand\t@CPI0_3[0], r2, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_29[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[12], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_54\n\tjump\t@.BB0_2\n.BB0_98:\n\tld.1\tr2, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_100\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_207:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_244\n\tadd\tr0, r0, r5\n.BB0_209:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_209\n.BB0_244:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_211\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r4\n\tshl.s\t3, r3, r3\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_211:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_100:\n\tadd\t3, r0, r3\n\tsload\tr3, r4\n\tsub.s\t1, r0, r5\n\tadd\tr4, r0, stack-[12]\n\tadd\tr5, r0, stack-[11]\n\tsub!\tr4, r5, r4\n\tjump.ne\t@.BB0_102\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_102:\n\tadd\tstack-[12], r0, r4\n\tadd\t1, r4, r4\n\tsstore\tr3, r4\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_40[0], r3, r3\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r6\n\tadd\t192, r6, r3\n\tst.1\t64, r3\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[6]\n\tst.1.inc\tr6, r3, r7\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\t128, r6, r5\n\tadd\tstack-[13], r0, r4\n\tadd\tr5, r0, stack-[7]\n\tst.1\tr5, r4\n\tadd\t96, r6, r4\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t64, r6, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[10]\n\tst.1\tr7, r3\n\tadd\t160, r6, r2\n\tadd\t1, r0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_3[0], r2, r2\n\tld\tr1, r3\n\tsload\tr3, r1\n\tand\t@CPI0_4[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr3, r0, stack-[10]\n\tadd\t1, r3, r2\n\tsstore\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[10], r0, r1\n\tadd\t2, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_107\n.BB0_106:\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_107:\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_111\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_111\n.BB0_112:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_112\n.BB0_111:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_121\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_118\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_117:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_117\n.BB0_118:\n\tadd\tstack-[14], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_120\n\tadd\tstack-[14], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[9], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_120:\n\tadd\tstack-[14], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_113\n.BB0_121:\n\tadd\tstack-[14], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_123\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_123:\n\tadd\tstack-[14], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_113:\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[10], r0, r1\n\tadd\t3, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_106\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_129\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_129\n.BB0_130:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_130\n.BB0_129:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_139\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_136\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_135:\n\tadd\tstack-[14], r0, r5\n\tadd\tr2, r5, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_135\n.BB0_136:\n\tadd\tstack-[9], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_138\n\tadd\tstack-[9], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_138:\n\tadd\tstack-[9], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_131\n.BB0_139:\n\tadd\tstack-[9], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_141\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_141:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_131:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[10], r0, r1\n\tadd\t4, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_106\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_147\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_147\n.BB0_148:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_148\n.BB0_147:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_160\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_157\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_156:\n\tadd\tstack-[14], r0, r5\n\tadd\tr2, r5, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_156\n.BB0_157:\n\tadd\tstack-[9], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_159\n\tadd\tstack-[9], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tadd\tstack-[11], r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_159:\n\tadd\tstack-[9], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_149\n.BB0_160:\n\tadd\tstack-[9], r0, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_162\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_162:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tadd\tstack-[11], r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_149:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tadd\t5, r1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\t64, r0, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_152\n\tadd\tr0, r0, r4\n.BB0_151:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tstack-[13], r0, r6\n\tadd\tr4, r6, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_151\n.BB0_152:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t127, r2, r2\n\tadd\tstack-[15], r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_42[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[6], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI1_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nstorage_array_index_access_uint256_dyn:\n.func_begin4:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB4_1\n\tst.1\t0, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_2[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_3\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr1, r2, r1\n\tadd\tr0, r0, r2\n\tret\n.BB4_1:\n\tadd\t@CPI4_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin5:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd\tr4, r0, r6\n\tadd.eq\tr5, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB5_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB5_7\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_9\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB5_3\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB5_12:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB5_12\n\tjump\t@.BB5_3\n.BB5_7:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB5_3:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tjump.gt\t@.BB5_5\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_5\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\tadd\t@CPI5_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nrequire_helper_stringliteral_bfa5:\n.func_begin6:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_1\n\tret\n.BB6_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_2[0], r0, r2\n\tsub.s!\t@CPI6_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_hasPurchased:\n.func_begin7:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[4]\n\tand\t@CPI7_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[2], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[1], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB7_7\n\tld\tr1, r1\n\tadd\tr6, r0, r2\n\tadd\tr0, r0, r3\n.BB7_6:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB7_6\n.BB7_7:\n\tadd\tstack-[3], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI7_4[0], r1, r3\n\tadd\tstack-[4], r0, r5\n\tjump.gt\t@.BB7_9\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_9\n\tst.1\t64, r1\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB7_5\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r4\n.BB7_13:\n\tshl.s\t5, r4, r1\n\tadd\tr6, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r5, r1\n\tadd\tr3, r0, r1\n\tjump.eq\t@.BB7_5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r1\n\tadd\tr0, r0, r1\n\tjump.lt\t@.BB7_13\n.BB7_5:\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_9:\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI4_2:\nCPI5_0:\nCPI6_2:\nCPI7_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551616\nCPI0_2:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_1:\nCPI7_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 2227500435\nCPI0_7:\n\t.cell 3296661391\nCPI0_8:\n\t.cell 3296661392\nCPI0_9:\n\t.cell 3732202875\nCPI0_10:\n\t.cell 4211464750\nCPI0_11:\n\t.cell 2227500436\nCPI0_12:\n\t.cell 2775216987\nCPI0_13:\n\t.cell 3294644547\nCPI0_14:\n\t.cell 806604328\nCPI0_15:\n\t.cell 806604329\nCPI0_16:\n\t.cell 1389623369\nCPI0_17:\n\t.cell 2203600176\nCPI0_18:\n\t.cell 208211543\nCPI0_19:\n\t.cell 294793522\nCPI0_20:\n\t.cell 513164476\nCPI0_21:\nCPI7_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_22:\nCPI4_3:\nCPI5_1:\nCPI7_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_23:\nCPI5_2:\nCPI7_4:\n\t.cell 18446744073709551615\nCPI0_24:\n\t.cell 22468851670027339447189299131461116481346848353120295772503910100714774041867\nCPI0_25:\nCPI4_0:\nCPI5_3:\nCPI7_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_26:\nCPI4_1:\nCPI5_4:\nCPI7_6:\n\t.cell 2852213850513516153367582212096\nCPI0_27:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_28:\nCPI6_3:\n\t.cell 7922816251426433759354395033600\nCPI0_29:\n\t.cell -19789796891269710459526047188276808382065027284356818605162691360617517709493\nCPI0_30:\n\t.cell 37268812281437135120176313126454835497159806492523464732883036169862142492672\nCPI0_31:\nCPI6_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\n\t.cell 38191140526596200499274454483393599592708738742382377087651215361380706156544\nCPI0_33:\n\t.cell 33213987989631693067883787898815127616812546025719499875365775571681246445568\nCPI0_34:\n\t.cell 34562092273416877893884925022520508526556811457035280910031927667904514883584\nCPI0_35:\nCPI6_0:\n\t.cell 34562092273416877893761968078187313758277759066458009752210911109994692739072\nCPI0_36:\n\t.cell 38178759162906598248951223036369357871178629995487939202527111670062498803232\nCPI0_37:\n\t.cell 50831261267233467117081357457159752582909661979110460778480668755567518703988\nCPI0_38:\n\t.cell 44028789828919998481051639257108609823533294767091058991155907238526843879424\nCPI0_39:\n\t.cell 12993418654700534606776030461952\nCPI0_40:\n\t.cell 18446744073709551423\nCPI0_41:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_42:\n\t.cell 22214981023023722123110414121058895291194817539435641972154754784429312706865\nCPI0_43:\n\t.cell 2535301200456458802993406410752\nCPI0_44:\n\t.cell 30044236263652607918987560659154125674135254773192388756801978542287088517120\nCPI0_45:\n\t.cell 38196372293519861353184048017145309648891829512883277828088128122664355132537\nCPI0_46:\n\t.cell 35477323691238871464405063322201249921994547852611863304282610224653194493952\nCPI0_47:\n\t.cell 35477323689243310368438923863311949061285246809004664645976862012762985857024\n","bytecode":{"object":""},"methodIdentifiers":{"getDataAccessDetails(uint256)":"0c690e57","getListingDetails(uint256)":"fb05da2e","getPurchases()":"c47f0f90","hasPurchased(address,uint256)":"11923132","listData(uint256,string,string,string)":"83584530","listings(uint256)":"de74e57b","paymentToken()":"3013ce29","purchaseData(uint256)":"84c4f594","purchaseDataWithToken(uint256,uint256)":"a56a735b","purchases(address,uint256)":"52d3f849","setListingStatus(uint256,bool)":"1e9644bc","updateListingPrice(uint256,uint256)":"c4604943"}},"irOptimized":"/// @use-src 0:\"contracts/ZKDataMarketplace.sol\"\nobject \"DataMarketplace_527\" {\n    code {\n        {\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DataMarketplace_527\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            sstore(/** @src 0:1372:1373  \"1\" */ 0x03, 0x01)\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"DataMarketplace_527_deployed\")\n            codecopy(_3, dataoffset(\"DataMarketplace_527_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 0:\"contracts/ZKDataMarketplace.sol\"\n    object \"DataMarketplace_527_deployed\" {\n        code {\n            {\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0c690e57 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 0:4947:5028  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                        let expr := /** @src 0:4947:4983  \"hasPurchased(msg.sender, _listingId)\" */ fun_hasPurchased(/** @src 0:4960:4970  \"msg.sender\" */ caller(), /** @src 0:4947:4983  \"hasPurchased(msg.sender, _listingId)\" */ value)\n                        /// @src 0:4947:5028  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                        if iszero(expr)\n                        {\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            mstore(0, value)\n                            mstore(32, 1)\n                            /// @src 0:4947:5028  \"hasPurchased(msg.sender, _listingId) || listings[_listingId].seller == msg.sender\"\n                            expr := /** @src 0:4987:5028  \"listings[_listingId].seller == msg.sender\" */ eq(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)), /** @src 0:4960:4970  \"msg.sender\" */ caller())\n                        }\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 14)\n                            mstore(add(memPtr, 68), \"Not authorized\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, value)\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:5126:5189  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:5134:5162  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ and(sload(/** @src 0:5134:5148  \"listing.seller\" */ dataSlot), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1)))))\n                        /// @src 0:5208:5294  \"return (...\"\n                        let var_availTxHash_mpos := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:5229:5248  \"listing.availTxHash\" */ add(dataSlot, 2))\n                        /// @src 0:5208:5294  \"return (...\"\n                        let var_availBlockHash_mpos := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:5262:5284  \"listing.availBlockHash\" */ add(dataSlot, 3))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 64)\n                        let tail := abi_encode_string(var_availTxHash_mpos, add(memPos, 64))\n                        mstore(add(memPos, 32), sub(tail, memPos))\n                        return(memPos, sub(abi_encode_string(var_availBlockHash_mpos, tail), memPos))\n                    }\n                    case 0x11923132 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        let ret := fun_hasPurchased(param, param_1)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(ret)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x1e9644bc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value_2 := calldataload(36)\n                        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n                        mstore(0, value_1)\n                        mstore(32, 1)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let cleaned := and(sload(/** @src 0:5851:5865  \"listing.seller\" */ dataSlot_1), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:5843:5898  \"require(listing.seller == msg.sender, \\\"Not the seller\\\")\"\n                        require_helper_stringliteral_ce57(/** @src 0:5851:5879  \"listing.seller == msg.sender\" */ eq(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ cleaned, /** @src 0:5869:5879  \"msg.sender\" */ caller()))\n                        /// @src 0:5917:5941  \"listing.active = _active\"\n                        update_storage_value_offsett_bool_to_bool(/** @src 0:5917:5931  \"listing.active\" */ add(dataSlot_1, 5), /** @src 0:5917:5941  \"listing.active = _active\" */ value_2)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let _1 := sload(/** @src 0:5983:5996  \"listing.price\" */ add(dataSlot_1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1))\n                        /// @src 0:5956:6006  \"ListingUpdated(_listingId, listing.price, _active)\"\n                        let _2 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        /// @src 0:5956:6006  \"ListingUpdated(_listingId, listing.price, _active)\"\n                        log2(_2, sub(abi_encode_uint256_bool(_2, _1, value_2), _2), 0x31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b, value_1)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0x3013ce29 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_3)\n                        return(memPos_2, 32)\n                    }\n                    case 0x52d3f849 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_addresst_uint256(calldatasize())\n                        mstore(0, and(param_2, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:1257:1303  \"mapping(address => uint256[]) public purchases\" */ 2)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:1257:1303  \"mapping(address => uint256[]) public purchases\"\n                        if iszero(lt(param_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sload(/** @src 0:1257:1303  \"mapping(address => uint256[]) public purchases\" */ dataSlot_2)))\n                        {\n                            revert(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0, 0)\n                        }\n                        /// @src 0:1257:1303  \"mapping(address => uint256[]) public purchases\"\n                        let slot, offset := storage_array_index_access_uint256_dyn(dataSlot_2, param_3)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let _3 := sload(/** @src 0:1257:1303  \"mapping(address => uint256[]) public purchases\" */ slot)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, shr(shl(3, offset), _3))\n                        return(memPos_3, 0x20)\n                    }\n                    case 0x83584530 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1 := abi_decode_string(add(4, offset_1), calldatasize())\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2 := abi_decode_string(add(4, offset_2), calldatasize())\n                        let offset_3 := calldataload(100)\n                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                        let value3 := abi_decode_string(add(4, offset_3), calldatasize())\n                        if /** @src 0:1999:2029  \"bytes(_availTxHash).length > 0\" */ iszero(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(/** @src 0:1999:2018  \"bytes(_availTxHash)\" */ value1))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 32)\n                            mstore(add(memPtr_1, 68), \"Transaction hash cannot be empty\")\n                            revert(memPtr_1, 100)\n                        }\n                        if /** @src 0:2084:2117  \"bytes(_availBlockHash).length > 0\" */ iszero(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(/** @src 0:2084:2106  \"bytes(_availBlockHash)\" */ value2))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 26)\n                            mstore(add(memPtr_2, 68), \"Block hash cannot be empty\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _4 := sload(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        sstore(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, increment_uint256(_4))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let memPtr_3 := mload(64)\n                        let newFreePtr := add(memPtr_3, 192)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_3, /** @src 0:2277:2287  \"msg.sender\" */ caller())\n                        /// @src 0:2243:2474  \"DataListing({...\"\n                        let _5 := add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 32)\n                        mstore(_5, calldataload(4))\n                        /// @src 0:2243:2474  \"DataListing({...\"\n                        let _6 := add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 64)\n                        mstore(_6, value1)\n                        mstore(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 96), value2)\n                        mstore(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 128), value3)\n                        mstore(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, 160), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1)\n                        mstore(0, _4)\n                        mstore(32, 1)\n                        let dataSlot_3 := keccak256(0, 64)\n                        sstore(dataSlot_3, or(and(sload(dataSlot_3), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_3), sub(shl(160, 1), 1))))\n                        sstore(add(dataSlot_3, 1), mload(_5))\n                        let _7 := mload(_6)\n                        let newLen := mload(_7)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _8 := extract_byte_array_length(sload(add(dataSlot_3, 2)))\n                        if gt(_8, 31)\n                        {\n                            mstore(0, add(dataSlot_3, 2))\n                            let data := keccak256(0, 32)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, 32) { deleteStart := data }\n                            let start := deleteStart\n                            for { }\n                            lt(start, add(data, shr(5, add(_8, 31))))\n                            { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 31)\n                        case 1 {\n                            mstore(0, add(dataSlot_3, 2))\n                            let dstPtr := keccak256(0, 32)\n                            let i := 0\n                            for { } lt(i, and(newLen, not(31))) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_7, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(and(newLen, not(31)), newLen)\n                            {\n                                let lastValue := mload(add(_7, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen), 248), not(0)))))\n                            }\n                            sstore(add(dataSlot_3, 2), add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_4 := 0\n                            if newLen\n                            {\n                                value_4 := mload(add(_7, srcOffset))\n                            }\n                            sstore(add(dataSlot_3, 2), or(and(value_4, not(shr(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen), not(0)))), shl(1, newLen)))\n                        }\n                        let _9 := mload(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 96))\n                        let newLen_1 := mload(_9)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _10 := extract_byte_array_length(sload(add(dataSlot_3, /** @src 0:2187:2202  \"nextListingId++\" */ 0x03)))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        if gt(_10, 31)\n                        {\n                            mstore(0, add(dataSlot_3, /** @src 0:2187:2202  \"nextListingId++\" */ 0x03))\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            let data_1 := keccak256(0, 32)\n                            let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                            if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, add(data_1, shr(5, add(_10, 31))))\n                            { start_1 := add(start_1, 1) }\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            mstore(0, add(dataSlot_3, /** @src 0:2187:2202  \"nextListingId++\" */ 0x03))\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            let dstPtr_1 := keccak256(0, 32)\n                            let i_1 := 0\n                            for { } lt(i_1, and(newLen_1, not(31))) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(_9, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(and(newLen_1, not(31)), newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_9, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen_1), 248), not(0)))))\n                            }\n                            sstore(add(dataSlot_3, /** @src 0:2187:2202  \"nextListingId++\" */ 0x03), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ add(shl(1, newLen_1), 1))\n                        }\n                        default {\n                            let value_5 := 0\n                            if newLen_1\n                            {\n                                value_5 := mload(add(_9, srcOffset_1))\n                            }\n                            sstore(add(dataSlot_3, /** @src 0:2187:2202  \"nextListingId++\" */ 0x03), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ or(and(value_5, not(shr(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                        }\n                        let memberSlot := add(dataSlot_3, 4)\n                        let _11 := mload(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 128))\n                        let newLen_2 := mload(_11)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _12 := extract_byte_array_length(sload(memberSlot))\n                        if gt(_12, 31)\n                        {\n                            mstore(0, memberSlot)\n                            let data_2 := keccak256(0, 32)\n                            let deleteStart_2 := add(data_2, shr(5, add(newLen_2, 31)))\n                            if lt(newLen_2, 32) { deleteStart_2 := data_2 }\n                            let _13 := add(data_2, shr(5, add(_12, 31)))\n                            let start_2 := deleteStart_2\n                            for { } lt(start_2, _13) { start_2 := add(start_2, 1) }\n                            { sstore(start_2, 0) }\n                        }\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 32\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd := and(newLen_2, not(31))\n                            mstore(0, memberSlot)\n                            let dstPtr_2 := keccak256(0, 32)\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr_2, mload(add(_11, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, 1)\n                                srcOffset_2 := add(srcOffset_2, 32)\n                            }\n                            if lt(loopEnd, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(_11, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen_2), 248), not(0)))))\n                            }\n                            sstore(memberSlot, add(shl(1, newLen_2), 1))\n                        }\n                        default {\n                            let value_6 := 0\n                            if newLen_2\n                            {\n                                value_6 := mload(add(_11, srcOffset_2))\n                            }\n                            sstore(memberSlot, or(and(value_6, not(shr(shl(/** @src 0:2187:2202  \"nextListingId++\" */ 0x03, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ newLen_2), not(0)))), shl(1, newLen_2)))\n                        }\n                        update_storage_value_offsett_bool_to_bool(add(dataSlot_3, 5), iszero(iszero(mload(/** @src 0:2243:2474  \"DataListing({...\" */ add(memPtr_3, 160)))))\n                        /// @src 0:2498:2553  \"DataListed(listingId, msg.sender, _price, _description)\"\n                        let _14 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        mstore(_14, calldataload(4))\n                        mstore(add(_14, 32), 64)\n                        /// @src 0:2498:2553  \"DataListed(listingId, msg.sender, _price, _description)\"\n                        log3(_14, sub(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ abi_encode_string(value3, add(_14, 64)), /** @src 0:2498:2553  \"DataListed(listingId, msg.sender, _price, _description)\" */ _14), 0x311d3bd27ae3dbd19bf3422e78b7bb536b01ad6f6ca117e48b49f30991d60931, _4, /** @src 0:2277:2287  \"msg.sender\" */ caller())\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _4)\n                        return(memPos_4, 32)\n                    }\n                    case 0x84c4f594 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\"\n                        let _15 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        /// @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\"\n                        mstore(_15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ shl(229, 4594637))\n                        mstore(/** @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\" */ add(_15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 4), 32)\n                        mstore(add(/** @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\" */ _15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 36), 83)\n                        mstore(add(/** @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\" */ _15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 68), \"This marketplace now uses token \")\n                        mstore(add(/** @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\" */ _15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 100), \"payments. Please use purchaseDat\")\n                        mstore(add(/** @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\" */ _15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 132), \"aWithToken instead.\")\n                        /// @src 0:3705:3798  \"revert(\\\"This marketplace now uses token payments. Please use purchaseDataWithToken instead.\\\")\"\n                        revert(_15, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 164)\n                    }\n                    case 0xa56a735b {\n                        if callvalue() { revert(0, 0) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_4)\n                        let _16 := 0x20\n                        mstore(_16, /** @src 0:2752:2760  \"listings\" */ 0x01)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        let _17 := sub(shl(160, 1), 1)\n                        /// @src 0:2791:2854  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:2799:2827  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ and(sload(/** @src 0:2799:2813  \"listing.seller\" */ dataSlot_4), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _17))))\n                        if iszero(and(sload(/** @src 0:2872:2886  \"listing.active\" */ add(dataSlot_4, 5)), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0xff))\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), _16)\n                            mstore(add(memPtr_4, 36), 21)\n                            mstore(add(memPtr_4, 68), \"Listing is not active\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 0:2941:2954  \"listing.price\"\n                        let _18 := add(dataSlot_4, /** @src 0:2752:2760  \"listings\" */ 0x01)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        if /** @src 0:2930:2954  \"_amount >= listing.price\" */ lt(param_5, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sload(/** @src 0:2941:2954  \"listing.price\" */ _18))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), _16)\n                            mstore(add(memPtr_5, 36), 20)\n                            mstore(add(memPtr_5, 68), \"Insufficient payment\")\n                            revert(memPtr_5, 100)\n                        }\n                        mstore(0, /** @src 0:3039:3049  \"msg.sender\" */ caller())\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        mstore(_16, /** @src 0:3029:3038  \"purchases\" */ 0x02)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        let oldLen := sload(dataSlot_5)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_5, add(oldLen, /** @src 0:2752:2760  \"listings\" */ 0x01))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let slot_1, offset_4 := storage_array_index_access_uint256_dyn(dataSlot_5, oldLen)\n                        let _19 := sload(slot_1)\n                        let shiftBits := shl(3, offset_4)\n                        let mask := shl(shiftBits, not(0))\n                        sstore(slot_1, or(and(_19, not(mask)), and(shl(shiftBits, param_4), mask)))\n                        let cleaned_1 := and(sload(0), _17)\n                        let cleaned_2 := and(sload(/** @src 0:3180:3194  \"listing.seller\" */ dataSlot_4), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _17)\n                        let _20 := sload(/** @src 0:3196:3209  \"listing.price\" */ _18)\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        let _21 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        let _22 := shl(224, 0x23b872dd)\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        mstore(_21, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _22)\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        let _23 := call(gas(), cleaned_1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0, /** @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\" */ _21, sub(abi_encode_address_address_uint256(add(_21, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 4), /** @src 0:3039:3049  \"msg.sender\" */ caller(), /** @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\" */ cleaned_2, _20), _21), _21, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16)\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        if iszero(_23)\n                        {\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        let expr_1 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0\n                        /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                        if _23\n                        {\n                            let _24 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16\n                            /// @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\"\n                            if gt(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16, /** @src 0:3142:3210  \"paymentToken.transferFrom(msg.sender, listing.seller, listing.price)\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_21, _24)\n                            expr_1 := abi_decode_bool_fromMemory(_21, add(_21, _24))\n                        }\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        if iszero(expr_1)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), _16)\n                            mstore(add(memPtr_6, 36), 21)\n                            mstore(add(memPtr_6, 68), \"Token transfer failed\")\n                            revert(memPtr_6, 100)\n                        }\n                        let _25 := sload(/** @src 0:3309:3322  \"listing.price\" */ _18)\n                        /// @src 0:3295:3449  \"if (_amount > listing.price) {...\"\n                        if /** @src 0:3299:3322  \"_amount > listing.price\" */ gt(param_5, _25)\n                        /// @src 0:3295:3449  \"if (_amount > listing.price) {...\"\n                        {\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            let cleaned_3 := and(sload(0), _17)\n                            let diff := sub(param_5, _25)\n                            if gt(diff, param_5)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            let _26 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            mstore(_26, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _22)\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            let _27 := call(gas(), cleaned_3, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0, /** @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\" */ _26, sub(abi_encode_address_address_uint256(add(_26, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 4), /** @src 0:3039:3049  \"msg.sender\" */ caller(), caller(), /** @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\" */ diff), _26), _26, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16)\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            if iszero(_27)\n                            {\n                                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                                let pos_1 := mload(64)\n                                returndatacopy(pos_1, 0, returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            let expr_2 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0\n                            /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                            if _27\n                            {\n                                let _28 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16\n                                /// @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\"\n                                if gt(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16, /** @src 0:3346:3420  \"paymentToken.transferFrom(msg.sender, msg.sender, _amount - listing.price)\" */ returndatasize()) { _28 := returndatasize() }\n                                finalize_allocation(_26, _28)\n                                expr_2 := abi_decode_bool_fromMemory(_26, add(_26, _28))\n                            }\n                            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                            if iszero(expr_2)\n                            {\n                                let memPtr_7 := mload(64)\n                                mstore(memPtr_7, shl(229, 4594637))\n                                mstore(add(memPtr_7, 4), _16)\n                                mstore(add(memPtr_7, 36), 13)\n                                mstore(add(memPtr_7, 68), \"Refund failed\")\n                                revert(memPtr_7, 100)\n                            }\n                        }\n                        let cleaned_4 := and(sload(/** @src 0:3510:3524  \"listing.seller\" */ dataSlot_4), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _17)\n                        let _29 := sload(/** @src 0:3526:3539  \"listing.price\" */ _18)\n                        /// @src 0:3472:3540  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\"\n                        let _30 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        mstore(_30, _29)\n                        /// @src 0:3472:3540  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\"\n                        log4(_30, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _16, /** @src 0:3472:3540  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\" */ 0xd43f5f34801f2e70be3032e4807e0460394b94b06f8ec19842703ce34dc1874b, param_4, /** @src 0:3039:3049  \"msg.sender\" */ caller(), /** @src 0:3472:3540  \"DataPurchased(_listingId, msg.sender, listing.seller, listing.price)\" */ cleaned_4)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0xc4604943 {\n                        if callvalue() { revert(0, 0) }\n                        let param_6, param_7 := abi_decode_uint256t_uint256(calldatasize())\n                        mstore(0, param_6)\n                        mstore(0x20, /** @src 0:5455:5463  \"listings\" */ 0x01)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        let cleaned_5 := and(sload(/** @src 0:5493:5507  \"listing.seller\" */ dataSlot_6), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:5485:5540  \"require(listing.seller == msg.sender, \\\"Not the seller\\\")\"\n                        require_helper_stringliteral_ce57(/** @src 0:5493:5521  \"listing.seller == msg.sender\" */ eq(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ cleaned_5, /** @src 0:5511:5521  \"msg.sender\" */ caller()))\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        sstore(/** @src 0:5559:5572  \"listing.price\" */ add(dataSlot_6, /** @src 0:5455:5463  \"listings\" */ 0x01), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ param_7)\n                        let value_7 := and(sload(/** @src 0:5637:5651  \"listing.active\" */ add(dataSlot_6, 5)), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0xff)\n                        /// @src 0:5599:5652  \"ListingUpdated(_listingId, _newPrice, listing.active)\"\n                        let _31 := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(64)\n                        /// @src 0:5599:5652  \"ListingUpdated(_listingId, _newPrice, listing.active)\"\n                        log2(_31, sub(abi_encode_uint256_bool(_31, param_7, value_7), _31), 0x31aceb5c222c3c2acf0bfdd74237844684c71194bdb3442f13492d1bfceb950b, param_6)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        return(0, 0)\n                    }\n                    case 0xc47f0f90 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(0, /** @src 0:6152:6162  \"msg.sender\" */ caller())\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let _32 := 0x20\n                        mstore(_32, /** @src 0:6142:6151  \"purchases\" */ 0x02)\n                        /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        let pos_2 := mload(64)\n                        let pos_3 := pos_2\n                        let length := sload(dataSlot_7)\n                        mstore(pos_2, length)\n                        pos_2 := add(pos_2, _32)\n                        let pos_4 := pos_2\n                        mstore(0, dataSlot_7)\n                        let srcPtr := keccak256(0, _32)\n                        let i_3 := 0\n                        for { } lt(i_3, length) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_2, sload(srcPtr))\n                            pos_2 := add(pos_2, _32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(pos_3, sub(pos_2, pos_3))\n                        let memPos_5 := mload(64)\n                        let tail_1 := add(memPos_5, _32)\n                        mstore(memPos_5, _32)\n                        let pos_5 := tail_1\n                        let length_1 := mload(pos_3)\n                        mstore(tail_1, length_1)\n                        pos_5 := add(memPos_5, 64)\n                        let srcPtr_1 := pos_4\n                        let i_4 := 0\n                        for { } lt(i_4, length_1) { i_4 := add(i_4, 1) }\n                        {\n                            mstore(pos_5, mload(srcPtr_1))\n                            pos_5 := add(pos_5, _32)\n                            srcPtr_1 := add(srcPtr_1, _32)\n                        }\n                        return(memPos_5, sub(pos_5, memPos_5))\n                    }\n                    case 0xde74e57b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 1)\n                        let dataSlot_8 := keccak256(0, 64)\n                        let cleaned_6 := and(sload(/** @src 0:1143:1190  \"mapping(uint256 => DataListing) public listings\" */ dataSlot_8), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        let _33 := sload(/** @src 0:1143:1190  \"mapping(uint256 => DataListing) public listings\" */ add(dataSlot_8, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1))\n                        /// @src 0:1143:1190  \"mapping(uint256 => DataListing) public listings\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(dataSlot_8, 2))\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(dataSlot_8, 3))\n                        let ret_mpos_2 := copy_array_from_storage_to_memory_string(add(dataSlot_8, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 4))\n                        let value_8 := and(sload(/** @src 0:1143:1190  \"mapping(uint256 => DataListing) public listings\" */ add(dataSlot_8, 5)), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0xff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned_6)\n                        mstore(add(memPos_6, 32), _33)\n                        mstore(add(memPos_6, 64), 192)\n                        let tail_2 := abi_encode_string(ret_mpos, add(memPos_6, 192))\n                        mstore(add(memPos_6, 96), sub(tail_2, memPos_6))\n                        let tail_3 := abi_encode_string(ret_mpos_1, tail_2)\n                        mstore(add(memPos_6, 128), sub(tail_3, memPos_6))\n                        let tail_4 := abi_encode_string(ret_mpos_2, tail_3)\n                        mstore(add(memPos_6, 160), iszero(iszero(value_8)))\n                        return(memPos_6, sub(tail_4, memPos_6))\n                    }\n                    case 0xfb05da2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 1)\n                        let dataSlot_9 := keccak256(0, 64)\n                        let cleaned_7 := and(sload(/** @src 0:4504:4518  \"listing.seller\" */ dataSlot_9), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4496:4559  \"require(listing.seller != address(0), \\\"Listing does not exist\\\")\"\n                        require_helper_stringliteral_bfa5(/** @src 0:4504:4532  \"listing.seller != address(0)\" */ iszero(iszero(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ cleaned_7)))\n                        let _34 := sload(/** @src 0:4627:4640  \"listing.price\" */ add(dataSlot_9, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1))\n                        let value_9 := and(sload(/** @src 0:4687:4701  \"listing.active\" */ add(dataSlot_9, 5)), /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0xff)\n                        /// @src 0:4578:4711  \"return (...\"\n                        let var_description_mpos := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:4654:4673  \"listing.description\" */ add(dataSlot_9, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 4))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, cleaned_7)\n                        mstore(add(memPos_7, 32), _34)\n                        mstore(add(memPos_7, 64), 128)\n                        let tail_5 := abi_encode_string(var_description_mpos, add(memPos_7, 128))\n                        mstore(add(memPos_7, 96), iszero(iszero(value_9)))\n                        return(memPos_7, sub(tail_5, memPos_7))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                array := memPtr\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function require_helper_stringliteral_bfa5(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Listing does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                value0 := value\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 347 @src 0:3875:4210  \"function hasPurchased(address _buyer, uint256 _listingId) public view returns (bool) {...\"\n            function fun_hasPurchased(var_buyer, var_listingId) -> var\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ and(var_buyer, sub(shl(160, 1), 1)))\n                let _2 := 0x20\n                mstore(_2, /** @src 0:4003:4012  \"purchases\" */ 0x02)\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 0x40)\n                let pos := mload(0x40)\n                let pos_1 := pos\n                let length := sload(dataSlot)\n                mstore(pos, length)\n                pos := add(pos, _2)\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ dataSlot)\n                let srcPtr := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ _2)\n                let i := /** @src -1:-1:-1 */ _1\n                /// @src 0:807:6172  \"contract DataMarketplace {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, _2)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                /// @src 0:4035:4045  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ _1\n                /// @src 0:4030:4182  \"for (uint i = 0; i < userPurchases.length; i++) {...\"\n                for { }\n                /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1\n                /// @src 0:4035:4045  \"uint i = 0\"\n                {\n                    /// @src 0:4073:4076  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 0:4047:4071  \"i < userPurchases.length\"\n                    if iszero(lt(var_i, /** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(/** @src 0:4051:4071  \"userPurchases.length\" */ pos_1)))\n                    /// @src 0:4047:4071  \"i < userPurchases.length\"\n                    { break }\n                    /// @src 0:4092:4172  \"if (userPurchases[i] == _listingId) {...\"\n                    if /** @src 0:4096:4126  \"userPurchases[i] == _listingId\" */ eq(/** @src 0:807:6172  \"contract DataMarketplace {...\" */ mload(add(add(pos_1, shl(5, var_i)), _2)), /** @src 0:4096:4126  \"userPurchases[i] == _listingId\" */ var_listingId)\n                    /// @src 0:4092:4172  \"if (userPurchases[i] == _listingId) {...\"\n                    {\n                        /// @src 0:4146:4157  \"return true\"\n                        var := /** @src 0:807:6172  \"contract DataMarketplace {...\" */ 1\n                        /// @src 0:4146:4157  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 0:4191:4203  \"return false\"\n                var := /** @src -1:-1:-1 */ _1\n            }\n            /// @src 0:807:6172  \"contract DataMarketplace {...\"\n            function require_helper_stringliteral_ce57(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"Not the seller\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_uint256_bool(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208a9fd4808fa5ee204fd3c8d8860a3cb5a69b3d05cd071c38ea8aa924185db73664736f6c63430008110033\"\n    }\n}\n","hash":"010002939b5686c32954f91d37f28e403343f5040f2489b2c5940aac0e17c635","factoryDependencies":{}},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKDataMarketplace.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ZKDataMarketplace.sol\":{\"keccak256\":\"0x3b4f4dbcac29b6d13b3eca0ac9e0e91e7f0badc54c886f12cf819c75d5472d25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f5b5185d3b19bfcb23ea3acb9a5c8a7a2b7fcb853bbbb390916340e1da35da\",\"dweb:/ipfs/QmPUUjb7xH146XAxyt7Hnf5GJ3T8kNs46dsKYU8MExmjPx\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}}}}}